/*!
* JAWS Settings Handler
*
* Copyright 2012 Raising the Floor - International
*
* Licensed under the New BSD license. You may not use this file except in
* compliance with this License.
*
* The research leading to these results has received funding from the European Union's
* Seventh Framework Programme (FP7/2007-2013) under grant agreement no. 289016.
*
* You may obtain a copy of the License at
* https://github.com/GPII/universal/blob/master/LICENSE.txt
*/

"use strict";

var fluid = require("infusion"),
    path = require("path"),
    gpii = fluid.registerNamespace("gpii");

require("./INISettingsHandler.js");

fluid.registerNamespace("gpii.settingsHandlers.JAWSSettingsHandler.parser");

gpii.settingsHandlers.JAWSSettingsHandler.getProfileFileName = function (options) {
    var iniPayload = {
        "com.freedomscientific.jaws": [{
            options: {
                "filename": options.filename
            },
            settings: {
                "Voice Profiles.ActiveVoiceProfileName": null
            }
        }]
    };
    var response = gpii.settingsHandlers.INISettingsHandler.get(iniPayload);
    var solutions = response["com.freedomscientific.jaws"];
    var filename = undefined;

    if (Array.isArray(solutions) && solutions.length) {
        var solution = solutions[0];
        var settingValue = fluid.get(solution, ["settings", "Voice Profiles.ActiveVoiceProfileName"]);

        if (settingValue) {
            filename = path.join(options.foldername, settingValue + ".VPF");
        } else {
            filename = path.join(options.foldername, "Eloquence.VPF");
        }
    }

    return filename;
};

gpii.settingsHandlers.JAWSSettingsHandler.parser.parse = function (content, options) {
    return gpii.iniFile.read(content, options);
};

gpii.settingsHandlers.JAWSSettingsHandler.parser.stringify = function (content, options) {
    return gpii.iniFile.writeFromFile(options.filename, content, options);
};

/* PUBLIC API FUNCTIONS */
gpii.settingsHandlers.JAWSSettingsHandler.get =
    gpii.settingsHandlers.makeFileGet(gpii.settingsHandlers.JAWSSettingsHandler.parser,
        gpii.settingsHandlers.JAWSSettingsHandler.getProfileFileName);
gpii.settingsHandlers.JAWSSettingsHandler.set =
    gpii.settingsHandlers.makeFileSet(gpii.settingsHandlers.JAWSSettingsHandler.parser,
        gpii.settingsHandlers.JAWSSettingsHandler.getProfileFileName);
