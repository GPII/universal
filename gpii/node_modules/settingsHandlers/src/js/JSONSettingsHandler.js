/*!
  GPII JSON Settings Handler

  Copyright 2012 OpenDirective and Raising the Floor - International

  Licensed under the New BSD license. You may not use this file except in
  compliance with this License.

  You may obtain a copy of the License at
  https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        fs = require("fs"),
        gpii = fluid.registerNamespace("gpii");

    fluid.registerNamespace("gpii.settingsHandlers.JSONSettingsHandler");

    gpii.settingsHandlers.JSONSettingsHandler.set = function(profile) {
	var app = fluid.copy(profile); 
	for (var appId in app) {
	    for (var j = 0; j < app[appId].length; j++) { 
		// load the default settings used by MAAVIS
                var path = app[appId][j].options.path; 
		var defaultSettings = require(path);

		// record differences between required and default settings
		// so that they default settings can be restored
		var requiredSettings = app[appId][j].settings;
		var changedSettings = fluid.copy(requiredSettings);
		for (var settingKey in requiredSettings) {
		    var oldValue = defaultSettings[settingKey];
		    var newValue = requiredSettings[settingKey];
		    changedSettings[settingKey] = {
			"oldValue": oldValue,
			"newValue": newValue
		    };
		}
		app[appId][j].settings = changedSettings;
		
		// merge the required settings and default settings
		// this means required settings overwrite default settings
		fluid.merge(null, defaultSettings,  requiredSettings);

		// Write the new settings to a file for MAAVIS to read
		fs.writeFileSync(path, JSON.stringify(defaultSettings));
	    } 
	}
	console.log(app);
	return app;
    }

}());
