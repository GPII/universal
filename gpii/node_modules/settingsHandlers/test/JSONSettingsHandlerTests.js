/*!
JSON Settings Handler Tests

Copyright 2012 Raising the Floor - International

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

/*global require, __dirname*/

(function () {

    "use strict";

    // This loads universal.
    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii"),
        jqUnit = fluid.require("jqUnit"),
        fs = require("fs");

    require("testFramework");
    require("settingsHandlers");

    var JSONHandlerTester = gpii.tests.testEnvironment();

    jqUnit.module("JSONSettingsHandler Tests");

    JSONHandlerTester.test("JSONHandler.set", function () {
        var payload = {
            "net.opendirective.maavis": [{ 
                options: {
                    "path": __dirname + "/data/JSONSettingsHandler/test1Input.json"
                },
                settings: {
                    "theme": "bw",
                    "userType": "scan",
                    "name": "Test"
                }
            }]
        };

        var expectedResult = {
            "net.opendirective.maavis": [{
                options: {
                    "path": __dirname + "/data/JSONSettingsHandler/test1Input.json"
                },
                settings: {
                    "userType": "scan",
                    "theme": "bw",
                    "speakTitles": "yes",
                    "showLabels": "yes",
                    "showImages": "yes",
                    "useSkype": "no",
                    "scanMode": "AUTO1SWITCHAUTOSTART",
                    "scanRate": "2500",
                    "speakLabels": "no",
                    "selectionsSetSize": "2x3",
                    "passwordItems": "images",
                    "passwordSetSize": "4x3",
                    "splashTime": 2,
                    "name": "Test"
                }
            }]
        };
        //read original JSON and copy to a file we can mess up:
        var origJSON = fs.readFileSync(__dirname + "/data/JSONSettingsHandler/defaultSettings.json", "utf-8");
        fs.writeFileSync(__dirname + "/data/JSONSettingsHandler/test1Input.json", origJSON, "utf-8");
        //test return payload
        var returnPayload = gpii.settingsHandlers.JSONSettingsHandler.set(payload);
        jqUnit.assertDeepEq("Checking return payload for simple JSON file: ", expectedResult, returnPayload);
        
        //next check that the written JSON file is as expected:
        var savedJSON = JSON.parse(fs.readFileSync(__dirname + "/data/JSONSettingsHandler/test1Input.json", "utf-8"));
        var expectedJSON = JSON.parse(fs.readFileSync(__dirname + "/data/JSONSettingsHandler/expected_test1output.json", "utf-8"));
        jqUnit.assertDeepEq("checking JSON file: ", expectedJSON, savedJSON);
    });
}());