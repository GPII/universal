"use strict";

var fluid = require("infusion"),
    gpii = fluid.registerNamespace("gpii");

fluid.registerNamespace("gpii.tests");

fluid.require("%gpii-universal");
gpii.loadTestingSupport();

require("settingsHandlers");

fluid.logObjectRenderChars = 30000;

var test = {
    payload: {
        "com.freedomscientific.jaws": [{
            options: {
                "filename": "C:\\Users\\vagrant\\AppData\\Roaming\\Freedom Scientific\\JAWS\\2019\\Settings\\enu\\DEFAULT.JCF",
                "foldername": "C:\\Users\\vagrant\\AppData\\Roaming\\Freedom Scientific\\JAWS\\2019\\Settings\\VoiceProfiles"
            },
            settings: {
                "ENU-Global.Pitch": 90
            }
        }]
    },
    expectedResult: {
        "com.freedomscientific.jaws": [{
            options: {
                "filename": "C:\\Users\\vagrant\\AppData\\Roaming\\Freedom Scientific\\JAWS\\2019\\Settings\\enu\\DEFAULT.JCF",
                "foldername": "C:\\Users\\vagrant\\AppData\\Roaming\\Freedom Scientific\\JAWS\\2019\\Settings\\VoiceProfiles"
            },
            settings: {
                "ENU-Global.Pitch": {
                    newValue: 90,
                    oldValue: 65
                }
            }
        }]
    }
};

var output = gpii.settingsHandlers.JAWSSettingsHandler.get(test.payload);
output = gpii.settingsHandlers.JAWSSettingsHandler.set(test.payload);
fluid.log(output);
