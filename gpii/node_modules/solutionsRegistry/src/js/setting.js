"use strict";
var fluid = require("infusion");
var gpii  = fluid.registerNamespace("gpii");

fluid.registerNamespace("gpii.solutionsRegistry.setting");

// Invoker to return the setting, its key, and options.
gpii.solutionsRegistry.setting.exportOptions = function (that) {
    return fluid.model.transformWithRules(that.options, that.options.rules.optionsToExport);
};

// Marker grade to identify individual settings.
fluid.defaults("gpii.solutionsRegistry.setting", {
    gradeNames: ["fluid.component"],
    rules: {
        optionsToExport: {
            "": "settingOptions",
            "type": {
                "transform": { "type": "fluid.transforms.delete" }
            },
            "parents": {
                "transform": { "type": "fluid.transforms.delete" }
            }
        }
    },
    // Bucket to distinguish material that should be spit out as part of the legacy format from inherited material.
    settingOptions: {
    },
    invokers: {
        "exportOptions": {
            funcName: "gpii.solutionsRegistry.setting.exportOptions",
            args:     ["{that}"]
        }
    }
});
