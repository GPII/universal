{
  "configuration1": {
    "capabilitiesTransformations": {
      "mag\\.size": "http://registry\\.gpii\\.net/common/magnification",
      "mag\\.TextViewerFontSize": "http://registry\\.gpii\\.net/common/fontSize",
      "mag\\.TextViewerFontFaceName": "http://registry\\.gpii\\.net/common/fontFaceFontName",
      "mag\\.startmagnified": {
        "transform": {
          "type": "fluid.transforms.condition",
          "conditionPath": "http://registry\\.gpii\\.net/common/magnification/enabled",
          "true": 1,
          "false": 0
        }
      },
      "scheme\\.Mouse_Scheme": {
        "transform": {
          "type": "fluid.transforms.condition",
          "conditionPath": "http://registry\\.gpii\\.net/common/showCrosshairs",
          "true": "Bold Yellow with Full Cross+Mouse",
          "false": "3D Blue with Oval+Mouse"
        }
      }
    },
    "inverseCapabilitiesTransformations": {
      "http://registry\\.gpii\\.net/common/magnification": "mag\\.size",
      "http://registry\\.gpii\\.net/common/fontSize": "mag\\.TextViewerFontSize",
      "http://registry\\.gpii\\.net/common/fontFaceFontName": "mag\\.TextViewerFontFaceName",
      "http://registry\\.gpii\\.net/common/showCrosshairs": {
        "transform": {
          "type": "fluid.transforms.valueMapper",
          "defaultInputPath": "scheme\\.Mouse_Scheme",
          "match": [
            {
              "inputValue": "Bold with Short Cross+Mouse",
              "outputValue": true
            },
            {
              "inputValue": "Bold Yellow with Full Cross+Mouse",
              "outputValue": true
            },
            {
              "inputValue": "Scope When Moving+Mouse",
              "outputValue": true
            }
          ],
          "noMatch": {
            "outputUndefinedValue": true
          }
        }
      }
    }
  },
  "configuration2": {
    "capabilitiesTransformations": {
      "Options\\.TypingEcho": {
        "transform": {
          "type": "fluid.transforms.condition",
          "condition": {
            "transform": {
              "type": "fluid.transforms.binaryOp",
              "leftPath": "http://registry\\.gpii\\.net/common/keyEcho",
              "rightPath": "http://registry\\.gpii\\.net/common/wordEcho",
              "operator": "&&"
            }
          },
          "true": 3,
          "false": {
            "transform": {
              "type": "fluid.transforms.condition",
              "conditionPath": "http://registry\\.gpii\\.net/common/keyEcho",
              "true": 1,
              "false": {
                "transform": {
                  "type": "fluid.transforms.condition",
                  "conditionPath": "http://registry\\.gpii\\.net/common/wordEcho",
                  "true": 2
                }
              }
            }
          }
        }
      }
    },
    "inverseCapabilitiesTransformations": {
      "http://registry\\.gpii\\.net/common/keyEcho": {
        "transform": {
          "type": "valueMapper",
          "defaultInputPath": "Options\\.TypingEcho",
          "match": [
            {
              "inputValue": 1,
              "outputValue": true
            },
            {
              "inputValue": 3,
              "outputValue": true
            }
          ],
          "noMatch": {
            "outputUndefinedValue": true
          }
        }
      },
      "http://registry\\.gpii\\.net/common/wordEcho": {
        "transform": {
          "type": "valueMapper",
          "defaultInputPath": "Options\\.TypingEcho",
          "match": [
            {
              "inputValue": 2,
              "outputValue": true
            },
            {
              "inputValue": 3,
              "outputValue": true
            }
          ],
          "noMatch": {
            "outputUndefinedValue": true
          }
        }
      }
    }
  }
}
