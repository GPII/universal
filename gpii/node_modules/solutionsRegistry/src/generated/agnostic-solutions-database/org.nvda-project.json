{
  "name": "NVDA Screen Reader",
  "settingsHandlers": {
    "configs": {
      "supportedSettings": {
        "audio.audioDuckingMode": {
          "schema": {
            "title": "Audio Ducking Mode",
            "description": "Whether NVDA should lower the volume of other applications while NVDA is speaking or all the time while NVDA is running.",
            "enum": [
              0,
              1,
              2
            ],
            "enumLabels": [
              "No Ducking",
              "Duck when Outputting Speech and Sounds",
              "Always Duck"
            ],
            "default": 0
          }
        },
        "braille.autoTether": {
          "schema": {
            "title": "Tether Braille",
            "description": "Whether the braille display will follow the system focus or whether it follows the navigator object / review cursor.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "braille.cursorBlink": {
          "schema": {
            "title": "Blink Cursor",
            "description": "Whether the cursor should blink",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "braille.cursorBlinkRate": {
          "schema": {
            "title": "Cursor Blink Rate",
            "description": "The blink rate of the cursor in milliseconds.",
            "type": "integer",
            "minimum": 200,
            "maximum": 2000,
            "default": 500
          }
        },
        "braille.cursorShapeFocus": {
          "schema": {
            "title": "Cursor Shape for Focus",
            "description": "The shape (dot pattern) of the braille cursor. The selection indicator is not affected by this option.",
            "enum": [
              192,
              128,
              255
            ],
            "enumLabels": [
              "Dots 7 and 8",
              "Dot 8",
              "All Dots"
            ],
            "default": 192
          }
        },
        "braille.cursorShapeReview": {
          "schema": {
            "title": "Cursor Shape for Review",
            "description": "The shape (dot pattern) of the braille cursor. The selection indicator is not affected by this option.",
            "enum": [
              192,
              128,
              255
            ],
            "enumLabels": [
              "Dots 7 and 8",
              "Dot 8",
              "All Dots"
            ],
            "default": 128
          }
        },
        "braille.display": {
          "schema": {
            "title": "Braille Display",
            "description": "Which of the available braillle displays to use.",
            "enum": [
              "auto",
              "brltty",
              "ecoBraille",
              "hedoMobilLine",
              "hedoProfiLine",
              "lilli",
              "papenmeier",
              "papenmeier_serial",
              "seika",
              "noBraille"
            ],
            "enumLabels": [
              "Automatic",
              "brltty",
              "EcoBraille displays",
              "hedo MobilLine USB",
              "hedo ProfiLine USB",
              "MDV Lilli",
              "Papenmeier BRAILLEX newer models",
              "Papenmeier BRAILLEX older models",
              "Seika braille displays",
              "No braille"
            ],
            "default": "noBraille"
          }
        },
        "braille.expandAtCursor": {
          "schema": {
            "title": "Expand Contracted Braille",
            "description": "Whether to expand the word that is under the cursor into non-contracted computer braille.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "braille.focusContextPresentation": {
          "schema": {
            "title": "Focus Context Presentation",
            "description": "Choose what context information NVDA will show on the braille display when an object gets focus.",
            "enum": [
              "changedContext",
              "fill",
              "scroll"
            ],
            "enumLabels": [
              "Fill Display for Context Changes",
              "Always Fill Display",
              "Only when Scrolling Back"
            ],
            "default": "changedContext"
          }
        },
        "braille.inputTable": {
          "schema": {
            "title": "Input Table",
            "description": "Complementary to the output table option. The chosen table will be used to translate braille entered on your braille display's Perkins-style keyboard into text. NVDA currently only supports computer braille input so only 8 dot computer braille tables will be shown. You can move from braille table to braille table in the list by using the arrow keys. Note that this option is only useful if your braille display has a Perkins-style keyboard and this feature is supported by the braille display driver. If input is not supported on a display which does have a braille keyboard this will be noted in the Supported Braille Displays section.",
            "enum": [
              "ar-ar-g1.utb",
              "as-in-g1.utb",
              "be-in-g1.utb",
              "bg.ctb",
              "ckb-g1.ctb",
              "cy-cy-g1.utb",
              "cy-cy-g2.ctb",
              "cs-comp8.utb",
              "cs-g1.ctb",
              "da-dk-g08.ctb",
              "da-dk-g16.ctb",
              "da-dk-g18.ctb",
              "da-dk-g26.ctb",
              "da-dk-g28.ctb",
              "de-de-comp8.ctb",
              "de-de-g0.utb",
              "de-de-g1.ctb",
              "de-de-g2.ctb",
              "el.ctb",
              "en-gb-comp8.ctb",
              "en-gb-g1.utb",
              "en-GB-g2.ctb",
              "en-ueb-g1.ctb",
              "en-ueb-g2.ctb",
              "en-us-comp6.ctb",
              "en-us-comp8-ext.utb",
              "en-us-g1.ctb",
              "en-us-g2.ctb",
              "eo-g1.ctb",
              "Es-Es-G0.utb",
              "es-g1.ctb",
              "et-g0.utb",
              "ethio-g1.ctb",
              "fa-ir-comp8.ctb",
              "fa-ir-g1.utb",
              "fi.utb",
              "fi-fi-8dot.ctb",
              "fr-bfu-comp6.utb",
              "fr-bfu-comp8.utb",
              "fr-bfu-g2.ctb",
              "ga-g1.utb",
              "ga-g2.ctb",
              "gu-in-g1.utb",
              "gr-bb.ctb",
              "he.ctb",
              "hi-in-g1.utb",
              "hr-comp8.utb",
              "hr-g1.ctb",
              "hu-hu-comp8.ctb",
              "hu-hu-g1.ctb",
              "hu-hu-g2.ctb",
              "is.ctb",
              "it-it-comp6.utb",
              "it-it-comp8.utb",
              "ka-in-g1.utb",
              "ko-2006-g1.ctb",
              "ko-2006-g2.ctb",
              "ko-g1.ctb",
              "ko-g2.ctb",
              "ks-in-g1.utb",
              "lt.ctb",
              "lt-6dot.utb",
              "Lv-Lv-g1.utb",
              "ml-in-g1.utb",
              "mn-in-g1.utb",
              "mn-MN-g1.utb",
              "mn-MN-g2.ctb",
              "mr-in-g1.utb",
              "nl-BE-g0.utb",
              "nl-NL-g0.utb",
              "no-no-comp8.ctb",
              "No-No-g0.utb",
              "No-No-g1.ctb",
              "No-No-g2.ctb",
              "No-No-g3.ctb",
              "np-in-g1.utb",
              "or-in-g1.utb",
              "pl-pl-comp8.ctb",
              "Pl-Pl-g1.utb",
              "pt-pt-comp8.ctb",
              "Pt-Pt-g1.utb",
              "Pt-Pt-g2.ctb",
              "pu-in-g1.utb",
              "ro.ctb",
              "ru.ctb",
              "ru-ru-g1.utb",
              "sa-in-g1.utb",
              "Se-Se.ctb",
              "Se-Se-g1.utb",
              "sk-g1.ctb",
              "sl-si-comp8.ctb",
              "sl-si-g1.utb",
              "sr-g1.ctb",
              "ta-ta-g1.ctb",
              "te-in-g1.utb",
              "tr.ctb",
              "uk.utb",
              "unicode-braille.utb",
              "vi-g1.ctb",
              "zhcn-g1.ctb",
              "zhcn-g2.ctb",
              "zh-hk.ctb",
              "zh-tw.ctb"
            ],
            "enumLabels": [
              "Arabic grade 1",
              "Assamese grade 1",
              "Bengali grade 1",
              "Bulgarian 8 dot computer braille",
              "Central Kurdish grade 1",
              "Welsh grade 1",
              "Welsh grade 2",
              "Czech 8 dot computer braille",
              "Czech grade 1",
              "Danish 8 dot computer braille",
              "Danish 6 dot grade 1",
              "Danish 8 dot grade 1",
              "Danish 6 dot grade 2",
              "Danish 8 dot grade 2",
              "German 8 dot computer braille",
              "German grade 0",
              "German grade 1",
              "German grade 2",
              "Greek (Greece)",
              "English (U.K.) 8 dot computer braille",
              "English (U.K.) grade 1",
              "English (U.K.) grade 2",
              "Unified English Braille Code grade 1",
              "Unified English Braille Code grade 2",
              "English (U.S.) 6 dot computer braille",
              "English (U.S.) 8 dot computer braille",
              "English (U.S.) grade 1",
              "English (U.S.) grade 2",
              "Esperanto grade 1",
              "Spanish 8 dot computer braille",
              "Spanish grade 1",
              "Estonian grade 0",
              "Ethiopic grade 1",
              "Persian 8 dot computer braille",
              "Persian grade 1",
              "Finnish 6 dot",
              "Finnish 8 dot computer braille",
              "French (unified) 6 dot computer braille",
              "French (unified) 8 dot computer braille",
              "French (unified) grade 2",
              "Irish grade 1",
              "Irish grade 2",
              "Gujarati grade 1",
              "Koine Greek",
              "Hebrew 8 dot computer braille",
              "Hindi grade 1",
              "Croatian 8 dot computer braille",
              "Croatian grade 1",
              "Hungarian 8 dot computer braille",
              "Hungarian grade 1",
              "Hungarian grade 2",
              "Icelandic 8 dot computer braille",
              "Italian 6 dot computer braille",
              "Italian 8 dot computer braille",
              "Kannada grade 1",
              "Korean grade 1 (2006)",
              "Korean grade 2 (2006)",
              "Korean grade 1",
              "Korean grade 2",
              "Kashmiri grade 1",
              "Lithuanian 8 dot",
              "Lithuanian 6 dot",
              "Latvian grade 1",
              "Malayalam grade 1",
              "Manipuri grade 1",
              "Mongolian grade 1",
              "Mongolian grade 2",
              "Marathi grade 1",
              "Dutch (Belgium)",
              "Dutch (Netherlands)",
              "Norwegian 8 dot computer braille",
              "Norwegian grade 0",
              "Norwegian grade 1",
              "Norwegian grade 2",
              "Norwegian grade 3",
              "Nepali grade 1",
              "Oriya grade 1",
              "Polish 8 dot computer braille",
              "Polish grade 1",
              "Portuguese 8 dot computer braille",
              "Portuguese grade 1",
              "Portuguese grade 2",
              "Punjabi grade 1",
              "Romanian",
              "Russian braille for computer code",
              "Russian grade 1",
              "Sanskrit grade 1",
              "Swedish 8 dot computer braille",
              "Swedish grade 1",
              "Slovak grade 1",
              "Slovenian 8 dot computer braille",
              "Slovenian grade 1",
              "Serbian grade 1",
              "Tamil grade 1",
              "Telugu grade 1",
              "Turkish grade 1",
              "Ukrainian",
              "Unicode braille",
              "Vietnamese grade 1",
              "Chinese (China Mandarin) grade 1",
              "Chinese (China Mandarin) grade 2",
              "Chinese (Hong Kong Cantonese)",
              "Chinese (Taiwan Mandarin)"
            ],
            "default": "en-ueb-g1.ctb"
          }
        },
        "braille.messageTimeout": {
          "schema": {
            "title": "Message timeout (sec)",
            "description": "How long in seconds NVDA messages are displayed on the braille display. Specifying 0 disables displaying of these messages completely.",
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 4
          }
        },
        "braille.noMessageTimeout": {
          "schema": {
            "title": "Show Messages Indefinitely",
            "description": "Allow NVDA messages to be displayed on the braille display indefinitely.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "braille.readByParagraph": {
          "schema": {
            "title": "Display Braille by Paragraph",
            "description": "Whether to displayed braille by paragraphs instead of lines. If this is set the next and previous line commands will move by paragraph accordingly. This means that you do not have to scroll the display at the end of each line even where more text would fit on the display. This may allow for more fluent reading of large amounts of text. It is disabled by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "braille.showCursor": {
          "schema": {
            "title": "Show Braille Cursor",
            "description": "Whether to display the cursor on a braille display. It applies to the system caret and review cursor but not to the selection indicator.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "braille.tetherTo": {
          "schema": {
            "title": "Tether Braille",
            "description": "Whether the braille display will follow the system focus or whether it follows the navigator object / review cursor.",
            "enum": [
              "focus",
              "review",
              "autoTether"
            ],
            "enumLabels": [
              "Focus",
              "Review",
              "Auto Tether"
            ],
            "default": "focus"
          }
        },
        "braille.translationTable": {
          "schema": {
            "title": "Output Table",
            "description": "The braille output table to use in translating text into braille to be presented on your braille display.",
            "enum": [
              "ar-ar-g1.utb",
              "as-in-g1.utb",
              "be-in-g1.utb",
              "bg.ctb",
              "ckb-g1.ctb",
              "cy-cy-g1.utb",
              "cy-cy-g2.ctb",
              "cs-comp8.utb",
              "cs-g1.ctb",
              "da-dk-g08.ctb",
              "da-dk-g16.ctb",
              "da-dk-g18.ctb",
              "da-dk-g26.ctb",
              "da-dk-g28.ctb",
              "de-de-comp8.ctb",
              "de-de-g0.utb",
              "de-de-g1.ctb",
              "de-de-g2.ctb",
              "el.ctb",
              "en-gb-comp8.ctb",
              "en-gb-g1.utb",
              "en-GB-g2.ctb",
              "en-ueb-g1.ctb",
              "en-ueb-g2.ctb",
              "en-us-comp6.ctb",
              "en-us-comp8-ext.utb",
              "en-us-g1.ctb",
              "en-us-g2.ctb",
              "eo-g1.ctb",
              "Es-Es-G0.utb",
              "es-g1.ctb",
              "et-g0.utb",
              "ethio-g1.ctb",
              "fa-ir-comp8.ctb",
              "fa-ir-g1.utb",
              "fi.utb",
              "fi-fi-8dot.ctb",
              "fr-bfu-comp6.utb",
              "fr-bfu-comp8.utb",
              "fr-bfu-g2.ctb",
              "ga-g1.utb",
              "ga-g2.ctb",
              "gu-in-g1.utb",
              "gr-bb.ctb",
              "he.ctb",
              "hi-in-g1.utb",
              "hr-comp8.utb",
              "hr-g1.ctb",
              "hu-hu-comp8.ctb",
              "hu-hu-g1.ctb",
              "hu-hu-g2.ctb",
              "is.ctb",
              "it-it-comp6.utb",
              "it-it-comp8.utb",
              "ka-in-g1.utb",
              "ko-2006-g1.ctb",
              "ko-2006-g2.ctb",
              "ko-g1.ctb",
              "ko-g2.ctb",
              "ks-in-g1.utb",
              "lt.ctb",
              "lt-6dot.utb",
              "Lv-Lv-g1.utb",
              "ml-in-g1.utb",
              "mn-in-g1.utb",
              "mn-MN-g1.utb",
              "mn-MN-g2.ctb",
              "mr-in-g1.utb",
              "nl-BE-g0.utb",
              "nl-NL-g0.utb",
              "no-no-comp8.ctb",
              "No-No-g0.utb",
              "No-No-g1.ctb",
              "No-No-g2.ctb",
              "No-No-g3.ctb",
              "np-in-g1.utb",
              "or-in-g1.utb",
              "pl-pl-comp8.ctb",
              "Pl-Pl-g1.utb",
              "pt-pt-comp8.ctb",
              "Pt-Pt-g1.utb",
              "Pt-Pt-g2.ctb",
              "pu-in-g1.utb",
              "ro.ctb",
              "ru.ctb",
              "ru-ru-g1.utb",
              "sa-in-g1.utb",
              "Se-Se.ctb",
              "Se-Se-g1.utb",
              "sk-g1.ctb",
              "sl-si-comp8.ctb",
              "sl-si-g1.utb",
              "sr-g1.ctb",
              "ta-ta-g1.ctb",
              "te-in-g1.utb",
              "tr.ctb",
              "uk.utb",
              "unicode-braille.utb",
              "vi-g1.ctb",
              "zhcn-g1.ctb",
              "zhcn-g2.ctb",
              "zh-hk.ctb",
              "zh-tw.ctb"
            ],
            "enumLabels": [
              "Arabic grade 1",
              "Assamese grade 1",
              "Bengali grade 1",
              "Bulgarian 8 dot computer braille",
              "Central Kurdish grade 1",
              "Welsh grade 1",
              "Welsh grade 2",
              "Czech 8 dot computer braille",
              "Czech grade 1",
              "Danish 8 dot computer braille",
              "Danish 6 dot grade 1",
              "Danish 8 dot grade 1",
              "Danish 6 dot grade 2",
              "Danish 8 dot grade 2",
              "German 8 dot computer braille",
              "German grade 0",
              "German grade 1",
              "German grade 2",
              "Greek (Greece)",
              "English (U.K.) 8 dot computer braille",
              "English (U.K.) grade 1",
              "English (U.K.) grade 2",
              "Unified English Braille Code grade 1",
              "Unified English Braille Code grade 2",
              "English (U.S.) 6 dot computer braille",
              "English (U.S.) 8 dot computer braille",
              "English (U.S.) grade 1",
              "English (U.S.) grade 2",
              "Esperanto grade 1",
              "Spanish 8 dot computer braille",
              "Spanish grade 1",
              "Estonian grade 0",
              "Ethiopic grade 1",
              "Persian 8 dot computer braille",
              "Persian grade 1",
              "Finnish 6 dot",
              "Finnish 8 dot computer braille",
              "French (unified) 6 dot computer braille",
              "French (unified) 8 dot computer braille",
              "French (unified) grade 2",
              "Irish grade 1",
              "Irish grade 2",
              "Gujarati grade 1",
              "Koine Greek",
              "Hebrew 8 dot computer braille",
              "Hindi grade 1",
              "Croatian 8 dot computer braille",
              "Croatian grade 1",
              "Hungarian 8 dot computer braille",
              "Hungarian grade 1",
              "Hungarian grade 2",
              "Icelandic 8 dot computer braille",
              "Italian 6 dot computer braille",
              "Italian 8 dot computer braille",
              "Kannada grade 1",
              "Korean grade 1 (2006)",
              "Korean grade 2 (2006)",
              "Korean grade 1",
              "Korean grade 2",
              "Kashmiri grade 1",
              "Lithuanian 8 dot",
              "Lithuanian 6 dot",
              "Latvian grade 1",
              "Malayalam grade 1",
              "Manipuri grade 1",
              "Mongolian grade 1",
              "Mongolian grade 2",
              "Marathi grade 1",
              "Dutch (Belgium)",
              "Dutch (Netherlands)",
              "Norwegian 8 dot computer braille",
              "Norwegian grade 0",
              "Norwegian grade 1",
              "Norwegian grade 2",
              "Norwegian grade 3",
              "Nepali grade 1",
              "Oriya grade 1",
              "Polish 8 dot computer braille",
              "Polish grade 1",
              "Portuguese 8 dot computer braille",
              "Portuguese grade 1",
              "Portuguese grade 2",
              "Punjabi grade 1",
              "Romanian",
              "Russian braille for computer code",
              "Russian grade 1",
              "Sanskrit grade 1",
              "Swedish 8 dot computer braille",
              "Swedish grade 1",
              "Slovak grade 1",
              "Slovenian 8 dot computer braille",
              "Slovenian grade 1",
              "Serbian grade 1",
              "Tamil grade 1",
              "Telugu grade 1",
              "Turkish grade 1",
              "Ukrainian",
              "Unicode braille",
              "Vietnamese grade 1",
              "Chinese (China Mandarin) grade 1",
              "Chinese (China Mandarin) grade 2",
              "Chinese (Hong Kong Cantonese)",
              "Chinese (Taiwan Mandarin)"
            ],
            "default": "en-ueb-g1.ctb"
          }
        },
        "braille.wordWrap": {
          "schema": {
            "title": "Avoid splitting words when possible",
            "description": "If this is enabled a word which is too large to fit at the end of the braille display will not be split. Instead there will be some blank space at the end of the display. When you scroll the display you will be able to read the entire word. This is sometimes called \"word wrap\". Note that if the word is too large to fit on the display even by itself the word must still be split. If this is disabled as much of the word as possible will be displayed but the rest will be cut off. When you scroll the display you will then be able to read the rest of the word. Enabling this may allow for more fluent reading but generally requires you to scroll the display more.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.detectFormatAfterCursor": {
          "schema": {
            "title": "Report Formatting Changes after the Cursor",
            "description": "Whether to try and detect all the formatting changes on a line as it speaks it even if doing this may slow down NVDA's performance. By default, NVDA will detect the formatting at the position of the System caret / Review Cursor and in some instances may detect formatting on the rest of the line only if it is not going to cause a performance decrease. Enable this option while proof reading documents in applications such as Microsoft Word where formatting is important.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.includeLayoutTables": {
          "schema": {
            "title": "Announce Layout Tables",
            "description": "Whether to announce layout tables.  When on, NVDA will treat these as normal tables, announcing them based on Document Formatting Settings and locating them with quick navigation commands. When off, they will not be announced nor found with quick navigation. However, the content of the tables will still be included as normal text. This option is turned off by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportAlignment": {
          "schema": {
            "title": "Announce Alignment",
            "description": "Whether to announce the text alignment.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportBlockQuotes": {
          "schema": {
            "title": "Announce Block quotes",
            "description": "Whether to announce block quotes.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportBorderColor": {
          "schema": {
            "title": "Announce Cell Border Colors",
            "description": "Whether to announce cell border colors.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportBorderStyle": {
          "schema": {
            "title": "Announce Cell Border Styles",
            "description": "Whether to announce cell border styles.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportClickable": {
          "schema": {
            "title": "Announce Clickable Items",
            "description": "Whether to announce items that can be clicked.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportColor": {
          "schema": {
            "title": "Announce Font Colors",
            "description": "Whether to announce font colors.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportComments": {
          "schema": {
            "title": "Announce Comments",
            "description": "Whether to announce comments.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportEmphasis": {
          "schema": {
            "title": "Announce Font Emphasis",
            "description": "Whether to announce font emphasis.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportFontAttributes": {
          "schema": {
            "title": "Announce Font Attributes",
            "description": "Whether to announce font attributes.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportFontName": {
          "schema": {
            "title": "Announce Font Name",
            "description": "Whether to announce font names.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportFontSize": {
          "schema": {
            "title": "Announce Font Size",
            "description": "Whether to announce font sizes.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportFrames": {
          "schema": {
            "title": "Announce Frames",
            "description": "Whether to announce frames.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportHeadings": {
          "schema": {
            "title": "Announce Headings",
            "description": "Whether to announce headings.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportLandmarks": {
          "schema": {
            "title": "Announce Landmarks",
            "description": "Whether to announce landmarks.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportLineIndentation": {
          "schema": {
            "title": "Announce Line Indentation",
            "description": "Whether to announce line indentation,",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportLineIndentationWithTones": {
          "schema": {
            "title": "Announce Line Indentation with Tones",
            "description": "Whether to announce line indentation with tones.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportLineNumber": {
          "schema": {
            "title": "Announce Line Numbers",
            "description": "Whether to announce line numbers.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportLineSpacing": {
          "schema": {
            "title": "Announce Line Spacing",
            "description": "Whether to announce line spacing.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportLinks": {
          "schema": {
            "title": "Announce Links",
            "description": "Whether to announce links.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportLists": {
          "schema": {
            "title": "Announce Lists",
            "description": "Whether to announce lists.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportPage": {
          "schema": {
            "title": "Announce Pages",
            "description": "Whether to announce pages.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportParagraphIndentation": {
          "schema": {
            "title": "Announce Paragraph Indentation",
            "description": "Whether to announce paragraph indentation.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportRevisions": {
          "schema": {
            "title": "Announce Editor Revisions",
            "description": "Whether to announce editor revisions.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportSpellingErrors": {
          "schema": {
            "title": "Announce Spelling Errors",
            "description": "Whether to announce spelling errors.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportStyle": {
          "schema": {
            "title": "Announce Font Styles",
            "description": "Whether to announce font styles.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "documentFormatting.reportTableCellCoords": {
          "schema": {
            "title": "Announce Cell Coordinates",
            "description": "Whether to announce cell coordinates.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportTableHeaders": {
          "schema": {
            "title": "Announce Row/Column Headers",
            "description": "Whether to announce row/column headers of tables.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "documentFormatting.reportTables": {
          "schema": {
            "title": "Announce Tables",
            "description": "Whether to announce tables.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "general.askToExit": {
          "schema": {
            "title": "Show Options on Exit",
            "description": "Whether or not an options dialog should appear when you exit NVDA. If enabled, a dialog will appear when you attempt to exit NVDA asking whether you want to exit restart or restart with add-ons disabled. When disabled, NVDA will exit immediately.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "general.language": {
          "schema": {
            "title": "Language",
            "description": "The language that NVDA's user interface and messages should be shown in. There are many languages however the default option is \"User Default Windows\". This option tells NVDA to use the language that Windows is currently set to.",
            "enum": [
              "af_ZA",
              "am",
              "an",
              "ar",
              "bg",
              "ca",
              "ckb",
              "cs",
              "da",
              "de",
              "de_CH",
              "el",
              "en",
              "es",
              "es_CO",
              "fa",
              "fi",
              "fr",
              "ga",
              "he",
              "hi",
              "hr",
              "hu",
              "id",
              "is",
              "it",
              "ja",
              "ka",
              "kn",
              "ko",
              "ky",
              "lt",
              "mk",
              "mn",
              "my",
              "nb_NO",
              "ne",
              "nl",
              "nn_NO",
              "pa",
              "pl",
              "pt_BR",
              "pt_PT",
              "ro",
              "ru",
              "sk",
              "sl",
              "sq",
              "sr",
              "sv",
              "tl",
              "th",
              "tr",
              "uk",
              "ur",
              "vi",
              "zh_CN",
              "zh_HK",
              "zh_TW",
              "Windows"
            ],
            "enumLabels": [
              "Afrikkans(South Africa)",
              "Amharic",
              "Aragonese",
              "Arabic",
              "Bulgarian",
              "Catalan",
              "Central Kurdish",
              "Czech",
              "Danish",
              "German",
              "German(Switzerland)",
              "Greek",
              "English",
              "Spanish",
              "Spanish (Columbia)",
              "Persian",
              "Finnish",
              "French",
              "Irish",
              "Galician",
              "Herbrew",
              "Hindi",
              "Croatian",
              "Hungarian",
              "Indonesian",
              "Icelandic",
              "Italian",
              "Japanese",
              "Georgian",
              "Kannada",
              "Korean",
              "Kyrgyz",
              "Lithuanian",
              "Macedonian",
              "Mongolian",
              "Burmese",
              "Norwegian Bokmal (Norway)",
              "Nepali",
              "Dutch",
              "Norwegian Nynorsk (Norway)",
              "Punjabi",
              "Polish",
              "Portugese (Brazil)",
              "Portugese (Portugal)",
              "Romanian",
              "Russian",
              "Slovak",
              "Slovenian",
              "Albanian",
              "Serbian (Latin)",
              "Swedish",
              "Tamil",
              "Thai",
              "Turkish",
              "Ukranian",
              "Urdu",
              "Vietnamese",
              "Chinese (simplified China)",
              "Chinese (Traditional Hong Kong SAR)",
              "Chinese (Traditional Taiwan)",
              "User default"
            ],
            "default": "Windows"
          }
        },
        "general.playStartAndExitSounds": {
          "schema": {
            "title": "Play Sounds on Startup or Exit",
            "description": "Whether NVDA should play sounds when it starts or exits.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "general.saveConfigurationOnExit": {
          "schema": {
            "title": "Save Configuration on Exit",
            "description": "Whether to automatically save the current configuration when you exit NVDA.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "general.showWelcomeDialogAtStartup": {
          "schema": {
            "title": "Show Welcome Dialog on Startup",
            "description": "Whether or not to show the welcome dialog on startup.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "inputComposition.alwaysIncludeShortCharacterDescriptionInCandidateName": {
          "schema": {
            "title": "Always include short character description when announcing candidates",
            "description": "Whether or not NVDA should provide a short description for each character in a candidate either when its selected or when its automatically read when the candidate list appears. Note that for locales such as Chinese the announcement of extra character descriptions for the selected candidate is not affected by this option. This option may be useful for Korean and japanese input methods.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "inputComposition.announceSelectedCandidate": {
          "schema": {
            "title": "Announce Selected Candidate",
            "description": "Whether NVDA should announce the selected candidate when a candidate list appears or when the selection is changed. For input methods where the selection can be changed with the arrow keys (such as Chinese New Phonetic) this is necessary but for some input methods it may be more efficient typing with this option turned off. Note that even with this option off the review cursor will still be placed on the selected candidate allowing you to use object navigation / review to manually read this or other candidates.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "inputComposition.autoReportAllCandidates": {
          "schema": {
            "title": "Announce All Available Candidates",
            "description": "Whether or not all visible candidates should be announced automatically when a candidate list appears or its page is changed. Having this option on for pictographic input methods such as chinese New ChangJie or Boshiami is useful as you can automatically hear all symbols and their numbers and you can choose one right away. However for phonetic input methods such as chinese New Phonetic it may be more useful to turn this option off as all the symbols will sound the same and you will have to use the arrow keys to navigate the list items individually to gain more information from the character descriptions for each candidate.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "inputComposition.reportCompositionStringChanges": {
          "schema": {
            "title": "Announce Changes to the Composition String",
            "description": "After reading or precomposition data has been combined into a valid pictographic symbol most input methods place this symbol into a composition string for temporary storage along with other combined symbols before they are finally inserted into the document. This option allows you to choose whether or not NVDA should announce new symbols as they appear in the composition string. This option is on by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "inputComposition.reportReadingStringChanges": {
          "schema": {
            "title": "Announce Changes to the Reading String",
            "description": "Some input methods such as Chinese New Phonetic and New ChangJie have a reading string (sometimes known as a precomposition string). You can choose whether or not NVDA should announce new characters being typed into this reading string with this option. This option is on by default. Note some older input methods such as Chinese ChangJie may not use the reading string to hold precomposition characters but instead use the composition string directly. Please see the next option for configuring announcing of the composition string.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "keyboard.alertForSpellingErrors": {
          "schema": {
            "title": "Play sound for spelling errors while typing",
            "description": "Whether to play a short buzzer sound when a word you type contains a spelling error.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "keyboard.allowSkimReadingInSayAll": {
          "schema": {
            "title": "Allow skim reading in Say All",
            "description": "If on, certain navigation commands (such as quick navigation in browse mode or moving by line or paragraph) do not stop Say All rather Say All jumps to the new position and continues reading.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "keyboard.beepForLowercaseWithCapslock": {
          "schema": {
            "title": "Beep if typing lowercase letters when caps lock is on",
            "description": "When enabled, a warning beep will be heard if a letter is typed with the shift key while caps lock is on. Generally typing shifted letters with caps lock is unintentional and is usually due to not realising that caps lock is enabled. Therefore it can be quite helpful to be warned about this.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "keyboard.handleInjectedKeys": {
          "schema": {
            "title": "Handle keys from other applications",
            "description": "Whether key presses generated by applications such as on-screen keyboards and speech recognition software should be processed by NVDA. This option is on by default though certain users may wish to turn this off such as those typing Vietnamese with the Unikey typing software as it will cause incorrect character input.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "keyboard.keyboardLayout": {
          "schema": {
            "title": "Keyboard Layout",
            "description": "What keyboard layout NVDA should use. Currently the two that come with NVDA are Desktop and Laptop.",
            "enum": [
              "desktop",
              "laptop"
            ],
            "enumLabels": [
              "Desktop",
              "Laptop"
            ],
            "default": "desktop"
          }
        },
        "keyboard.speakCommandKeys": {
          "schema": {
            "title": "Announce Command Keys",
            "description": "Whether to announce all non-character keys you type on the keyboard. This includes key combinations such as control plus another letter.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "keyboard.speakTypedCharacters": {
          "schema": {
            "title": "Announce Typed Characters",
            "description": "Whether to announce all characters you type on the keyboard.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "keyboard.speakTypedWords": {
          "schema": {
            "title": "Announce Typed Words",
            "description": "Whether to announce words you type on the keyboard.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "keyboard.speechInterruptForCharacters": {
          "schema": {
            "title": "Interrupt Speech for Typed Characters",
            "description": "Whether or not to interrupt speech each time a character is typed. This is on by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "keyboard.speechInterruptForEnter": {
          "schema": {
            "title": "Interrupt Speech for Enter Key",
            "description": "Whether to interrupt speech each time the Enter key is pressed. On by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "keyboard.useCapsLockAsNVDAModifierKey": {
          "schema": {
            "title": "Use CapsLock as an NVDA Modifier Key",
            "description": "Whether or not to use the caps lock key as an NVDA modifier key.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "keyboard.useExtendedInsertAsNVDAModifierKey": {
          "schema": {
            "title": "Use Extended Insert as an NVDA Modifier Key",
            "description": "Whether or not to use the extended insert key (usually found above the arrow keys near home and end) as an NVDA modifier key.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "keyboard.useNumpadInsertAsNVDAModifierKey": {
          "schema": {
            "title": "Use Numpad Insert as an NVDA Modifier Key",
            "description": "Whether or not to use the insert key on the number pad as an NVDA modifier key.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "mouse.audioCoordinates_detectBrightness": {
          "schema": {
            "title": "Brightness controls audio coordinates volume",
            "description": "Whether the volume of the audio coordinates beeps is controled by how bright the screen is under the mouse. This setting is turned off by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "mouse.audioCoordinatesOnMouseMove": {
          "schema": {
            "title": "Play audio coordinates when mouse moves",
            "description": "Whether NVDA should play beeps as the mouse moves so that the user can work out where the mouse is in regards to the dimensions of the screen. The higher the mouse is on the screen the higher the pitch of the beeps. The further left or right the mouse is located on the screen the further left or right the sound will be played (assuming the user has stereo speakers or headphones).",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "mouse.enableMouseTracking": {
          "schema": {
            "title": "Mouse Tracking",
            "description": "Whether to announce the text currently under the mouse pointer as you move it around the screen. This allows you to find things on the screen by physically moving the mouse rather than trying to find them through object navigation.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "mouse.mouseTextUnit": {
          "schema": {
            "title": "Text Unit Resolution",
            "description": "If NVDA is set to announce the text under the mouse as you move it this option allows you to choose exactly how much text will be spoken. The options are character word line and paragraph.",
            "enum": [
              "character",
              "word",
              "line",
              "paragraph"
            ],
            "enumLabels": [
              "Character",
              "Word",
              "Line",
              "Paragraph"
            ],
            "default": "paragraph"
          }
        },
        "mouse.reportMouseShapeChanges": {
          "schema": {
            "title": "Announce Mouse Shape Changes",
            "description": "Whether to announce the shape of the mouse pointer each time it changes. The mouse pointer in Windows changes shape to convey certain information such as when something is editable or when something is loading et cetera.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "mouse.reportObjectRoleOnMouseEnter": {
          "schema": {
            "title": "Announce Role when Mouse Enters Object",
            "description": "Whether to announce the role (type) of object as the mouse moves inside it.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "presentation.guessObjectPositionInformationWhenUnavailable": {
          "schema": {
            "title": "Guess object position information when unavailable",
            "description": "If announcing of object position information is turned on this option allows NVDA to guess object position information when it is otherwise unavailable for a particular control. When on NVDA will announce position information for more controls such as menus and toolbars however this information may be slightly inaccurate.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "presentation.reportAutoSuggestionsWithSound": {
          "schema": {
            "title": "Play a sound when auto-suggestions appear",
            "description": "Toggle announcement of auto-suggestions, which are lists of suggested entries based on the text entered into certain edit fields and documents.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "presentation.reportDynamicContentChanges": {
          "schema": {
            "title": "Announce dynamic content changes",
            "description": "Toggles the announcement of new content in particular objects such as terminals and the history control in chat programs.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "presentation.reportHelpBalloons": {
          "schema": {
            "title": "Announce Help Balloons",
            "description": "Whether to report help balloons as they appear.  Help Balloons are like tool tips but are usually larger in size and are associated with system events such as a network cable being unplugged.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "presentation.reportKeyboardShortcuts": {
          "schema": {
            "title": "Announce Object Shortcut Keys",
            "description": "Whether to announce the shortcut key that is associated with a certain object or control when it is announced.  For example, the File menu on a menu bar may have a shortcut key of alt+f.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "presentation.reportObjectDescriptions": {
          "schema": {
            "title": "Announce Object Descriptions",
            "description": "Whether to announce the description along with objects.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "presentation.reportObjectPositionInformation": {
          "schema": {
            "title": "Announce Object Position Information",
            "description": "Whether to announce an object's position (e.g. 1 of 4) when moving to the object with the focus or object navigation.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "presentation.reportTooltips": {
          "schema": {
            "title": "Announce Tooltips",
            "description": "Whether to announce tool tips as they appear. Many Windows and controls show a small message (or tool tip) when you move the mouse pointer over them or sometimes when you move the focus to them.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "presentation.progressBarUpdates.progressBarOutputMode": {
          "schema": {
            "title": "Progress Bar Output",
            "description": "Whether/how to announce progress bar updates. It has the following options: Off: Progress bars will not be announced as they change.    Speak: This option tells NVDA to speak the progress bar in percentages. Each time the progress bar changes NVDA will speak the new value. Beep: This tells NVDA to beep each time the progress bar changes. The higher the beep the closer the progress bar is to completion. Beep and speak: This option tells NVDA to both beep and speak when a progress bar updates.",
            "enum": [
              "off",
              "speak",
              "beep",
              "speak and beep"
            ],
            "enumLabels": [
              "Off",
              "Speak",
              "Beep",
              "Speak and Beep"
            ],
            "default": "beep"
          }
        },
        "presentation.progressBarUpdates.reportBackgroundProgressBars": {
          "schema": {
            "title": "Announce Background Progress Bars",
            "description": "Whether to keep announcing a progress bar even if it is not physically in the foreground. If you minimize or switch away from a window that contains a progress bar NVDA will keep track of it allowing you to do other things while NVDA tracks the progress bar.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "reviewCursor.followCaret": {
          "schema": {
            "title": "Follow System Carat",
            "description": "Whether to automatically move the review cursor to the position of the system caret each time the system caret moves.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "reviewCursor.followFocus": {
          "schema": {
            "title": "Follow System Focus",
            "description": "Whether to place the review cursor in the same object as the current system focus whenever the focus changes.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "reviewCursor.followMouse": {
          "schema": {
            "title": "Follow Mouse Cursor",
            "description": "Whether the review cursor should follow the mouse as it moves.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "reviewCursor.simpleReviewMode": {
          "schema": {
            "title": "Simple Review Mode",
            "description": "When enabled NVDA will filter the hierarchy of objects that can be navigated to exclude objects that aren't of interest to the user; e.g. invisible objects and objects used only for layout purposes.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.beepSpeechModePitch": {
          "schema": {
            "title": "Speech Mode Beep Pitch",
            "description": "The pitch of the beep in speech mode.",
            "type": "integer",
            "minimum": 50,
            "maximum": 11025,
            "default": 10000
          }
        },
        "speech.espeak.autoDialectSwitching": {
          "schema": {
            "title": "eSpeak Automatic Dialect Switching",
            "description": "When using eSpeak, whether or not dialect changes should be made rather than just actual language changes. For example if reading in an English U.S. voice but a document specifies that some text is in English U.K. then the synthesizer will switch accents if this option is enabled. This option is disabled by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.espeak.autoLanguageSwitching": {
          "schema": {
            "title": "eSpeak Automatic Language Switching",
            "description": "When using eSpeak, whether NVDA should switch speech synthesizer languages automatically if the text being read specifies its language. This option is enabled by default. Currently only the eSpeak synthesizer supports automatic language switching.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.espeak.beepForCapitals": {
          "schema": {
            "title": "eSpeak Beep for Capitals",
            "description": "When using eSpeak, whether to make a small beep each time NVDA encounters a capitalized character by itself. Like the \"say cap for capitals\" setting, this is useful for Synthesizers that can't change their pitch for capital letters.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.espeak.capPitchChange": {
          "schema": {
            "title": "eSpeak Capital Pitch Change Percentage",
            "description": "When using eSpeak, the amount that the pitch of the voice will change when speaking a capital letter. This value is a percentage where a negative value lowers the pitch and a positive value raises it. For no pitch change you would use 0.",
            "type": "integer",
            "minimum": -100,
            "maximum": 100,
            "default": 30
          }
        },
        "speech.espeak.inflection": {
          "schema": {
            "title": "Voice Inflection",
            "description": "How much inflection (rise and fall in pitch) the synthesizer should use to speak with. (The only synthesizer that supports this option at the present time is eSpeak).",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 75
          }
        },
        "speech.espeak.pitch": {
          "schema": {
            "title": "eSpeak Pitch",
            "description": "The voice pitch eSpeak should use.",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 40
          }
        },
        "speech.espeak.rate": {
          "schema": {
            "title": "eSpeak Speech Rate",
            "description": "The rate at which eSpeak should speak.",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 30
          }
        },
        "speech.espeak.rateBoost": {
          "schema": {
            "title": "eSpeak Speech Rate Boost",
            "description": "Whether to use the \"sonic\" library to speed up the speech rate.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.espeak.sayCapForCapitals": {
          "schema": {
            "title": "Announce Capitals in eSpeak",
            "description": "Whether eSpeak should say the word \"cap\" before any capital letter when spoken as an individual character, such as when spelling a word.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.espeak.trustVoiceLanguage": {
          "schema": {
            "title": "eSpeak Trust Voice Language",
            "description": "Whether the current voice's language can be trusted when processing symbols and characters. This is on by default.  If you find that NVDA is reading punctuation in the wrong language for a particular synthesizer or voice you may wish to turn this off to force NVDA to use its global language setting instead.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.espeak.useSpellingFunctionality": {
          "schema": {
            "title": "eSpeak Use Spelling Functionality",
            "description": "Some words consist of only one character but the pronunciation is different depending on whether the character is being spoken as an individual character (such as when spelling) or a word. For example in English \"a\" is both a letter and a word and is pronounced differently in each case. This option allows the synthesizer to differentiate between these two cases if the synthesizer supports this. Most synthesizers do support it. This option should generally be enabled. However some Microsoft Speech API synthesizers do not implement this correctly and behave strangely when it is enabled. If you are having problems with the pronunciation of individual characters try disabling this option.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.espeak.voice": {
          "schema": {
            "title": "ESpeak Voice",
            "description": "The voice to use when using the 'eSpeak' engine.",
            "enum": [
              "af",
              "sq",
              "am",
              "ar",
              "an",
              "hy-arevela",
              "hyw",
              "as",
              "az",
              "eu",
              "bn",
              "bpy",
              "bs",
              "bg",
              "ca",
              "zh-yue",
              "zh-cmn",
              "hr",
              "cs",
              "da",
              "nl",
              "en-us",
              "en-029",
              "en-gb",
              "en-gb-x-gbclan",
              "en-gb-x-rp",
              "en-gb-scotland",
              "en-gb-x-gbcwmd",
              "eo",
              "et",
              "fi",
              "fr-be",
              "fr-fr",
              "fr-ch",
              "ga",
              "gd",
              "ka",
              "de",
              "grc",
              "el",
              "kl",
              "gn",
              "gu",
              "ht",
              "hak",
              "hi",
              "hu",
              "is",
              "id",
              "ia",
              "it",
              "ja",
              "quc",
              "kn",
              "kk",
              "kok",
              "ko",
              "ku",
              "ky",
              "la",
              "lv",
              "lfn",
              "lt",
              "jbo",
              "mk",
              "ms",
              "ml",
              "mt",
              "mr",
              "my",
              "mi",
              "nci",
              "ne",
              "no",
              "or",
              "om",
              "pap",
              "fa-Latn",
              "fa",
              "pl",
              "pt-br",
              "pt-pt",
              "pa",
              "ro",
              "ru-LV",
              "ru",
              "sr",
              "tn",
              "shn",
              "sd",
              "si",
              "sk",
              "sl",
              "es-419",
              "es",
              "sw",
              "sv",
              "ta",
              "tt",
              "te",
              "tr",
              "ur",
              "vi-vn-x-central",
              "vi",
              "vi-vn-x-south",
              "cy"
            ],
            "enumLabels": [
              "Afrikaans",
              "Albanian",
              "Amharic",
              "Arabic",
              "Aragonese",
              "Armenian (East Armenia)",
              "Armenian (West Armenia)",
              "Assamese",
              "Azerbaijani",
              "Basque",
              "Bengali",
              "Bishnupriya Manipuri",
              "Bosnian",
              "Bulgarian",
              "Catalan",
              "Chinese (Cantonese)",
              "Chinese (Mandarin)",
              "Croatian",
              "Czech",
              "Danish",
              "Dutch",
              "English (America)",
              "English (Caribbean)",
              "English (Great Britain)",
              "English (Lancaster)",
              "English (Received Pronunciation)",
              "English (Scotland)",
              "English (West Midlands)",
              "Esperanto",
              "Estonian",
              "Finnish",
              "French (Belgium)",
              "French (France)",
              "French (Switzerland)",
              "Gaelic (Irish)",
              "Gaelic (Scottish)",
              "Georgian",
              "German",
              "Greek (Ancient)",
              "Greek",
              "Greenlandic",
              "Guarani",
              "Gujarati",
              "Haitian Creole",
              "Hakka Chinese",
              "Hindi",
              "Hungarian",
              "Icelandic",
              "Indonesian",
              "Interlingua",
              "Italian",
              "Japanese",
              "K'iche'",
              "Kannada",
              "Kazakh",
              "Konkani",
              "Korean",
              "Kurdish",
              "Kyrgyz",
              "Latin",
              "Latvian",
              "Lingua Franca Nova",
              "Lithuanian",
              "Lojban",
              "Macedonian",
              "Malay",
              "Malayalam",
              "Maltese",
              "Marathi",
              "Myanmar (Burmese)",
              "Māori",
              "Nahuatl (Classical)",
              "Nepali",
              "Norwegian Bokmål",
              "Oriya",
              "Oromo",
              "Papiamento",
              "Persian (Pinglish)",
              "Persian",
              "Polish",
              "Portuguese (Brazil)",
              "Portuguese (Portugal)",
              "Punjabi",
              "Romanian",
              "Russian (Latvia)",
              "Russian",
              "Serbian",
              "Setswana",
              "Shan (Tai Yai)",
              "Sindhi",
              "Sinhala",
              "Slovak",
              "Slovenian",
              "Spanish (Latin America)",
              "Spanish (Spain)",
              "Swahili",
              "Swedish",
              "Tamil",
              "Tatar",
              "Telugu",
              "Turkish",
              "Urdu",
              "Vietnamese (Central)",
              "Vietnamese (Northern)",
              "Vietnamese (Southern)",
              "Welsh"
            ]
          }
        },
        "speech.espeak.volume": {
          "schema": {
            "title": "eSpeak Volume",
            "description": "The volume eSpeak should use.",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 100
          }
        },
        "speech.oneCore.autoDialectSwitching": {
          "schema": {
            "title": "oneCore Automatic Dialect Switching",
            "description": "When using oneCore, whether or not dialect changes should be made rather than just actual language changes. For example if reading in an English U.S. voice but a document specifies that some text is in English U.K. then the synthesizer will switch accents if this option is enabled. This option is disabled by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.oneCore.autoLanguageSwitching": {
          "schema": {
            "title": "OneCore Automatic Language Switching",
            "description": "When using oneCore, whether NVDA should switch speech synthesizer languages automatically if the text being read specifies its language. This option is enabled by default. Currently only the eSpeak synthesizer supports automatic language switching.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.oneCore.beepForCapitals": {
          "schema": {
            "title": "oneCore Beep for Capitals",
            "description": "When using oneCore, whether to make a small beep each time NVDA encounters a capitalized character by itself. Like the \"say cap for capitals\" setting this is useful for Synthesizers that can't change their pitch for capital letters.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.oneCore.capPitchChange": {
          "schema": {
            "title": "OneCore Capital Pitch Change Percentage",
            "description": "When using oneCore, the amount that the pitch of the voice will change when speaking a capital letter. This value is a percentage where a negative value lowers the pitch and a positive value raises it. For no pitch change you would use 0.",
            "type": "integer",
            "minimum": -100,
            "maximum": 100,
            "default": 30
          }
        },
        "speech.oneCore.pitch": {
          "schema": {
            "title": "OneCore Voice Pitch",
            "description": "When using oneCore, the pitch of the current voice, from 0 to 100 (0 being the lowest pitch and 100 being the highest).",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 50
          }
        },
        "speech.oneCore.rate": {
          "schema": {
            "title": "OneCore Speech Rate",
            "description": "The speech rate, from 0 to 100 (0 being the slowest, 100 being the fastest).",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 50
          }
        },
        "speech.oneCore.sayCapForCapitals": {
          "schema": {
            "title": "OneCore Announce Capitals",
            "description": "Whether to say the word \"cap\" before any capital letter when spoken as an individual character such as when spelling. Usually NVDA raises the pitch slightly for any capital letter but some synthesizers may not support this well so perhaps this option may be of use.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.oneCore.trustVoiceLanguage": {
          "schema": {
            "title": "OneCore Trust Voice Language",
            "description": "Whether the current voice's language can be trusted when processing symbols and characters. This is on by default.  If you find that NVDA is reading punctuation in the wrong language for a particular synthesizer or voice you may wish to turn this off to force NVDA to use its global language setting instead.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.oneCore.useSpellingFunctionality": {
          "schema": {
            "title": "OneCore Use Spelling Functionality",
            "description": "Some words consist of only one character but the pronunciation is different depending on whether the character is being spoken as an individual character (such as when spelling) or a word. For example in English \"a\" is both a letter and a word and is pronounced differently in each case. This option allows the synthesizer to differentiate between these two cases if the synthesizer supports this. Most synthesizers do support it. This option should generally be enabled. However some Microsoft Speech API synthesizers do not implement this correctly and behave strangely when it is enabled. If you are having problems with the pronunciation of individual characters try disabling this option.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.oneCore.voice": {
          "schema": {
            "title": "OneCore Voice",
            "description": "The voice to use.",
            "enum": [
              "Microsoft David",
              "Microsoft Zira",
              "Microsoft Mark"
            ],
            "enumLabels": [
              "Microsoft David",
              "Microsoft Zira",
              "Microsoft Mark"
            ],
            "default": "Microsoft David"
          }
        },
        "speech.oneCore.volume": {
          "schema": {
            "title": "OneCore Speech Volume",
            "description": "The speech volume, from 0 to 100 (0 being the lowest volume and 100 being the highest).",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 100
          }
        },
        "speech.outputDevice": {
          "schema": {
            "title": "Speech Output Device",
            "description": "The sound card that NVDA should instruct the selected synthesizer to speak through.",
            "enum": [
              "Microsoft Sound Mapper"
            ],
            "enumLabels": [
              "Microsoft Sound Mapper"
            ]
          }
        },
        "speech.sapi5.beepForCapitals": {
          "schema": {
            "title": "SAPI5 Beep for Capitals",
            "description": "When using sapi5, whether to make a small beep each time NVDA encounters a capitalized character by itself. Like the \"say cap for capitals\" setting this is useful for Synthesizers that can't change their pitch for capital letters.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.sapi5.capPitchChange": {
          "schema": {
            "title": "SAPI5 Capital Pitch Change Percentage",
            "description": "The amount that the pitch of the voice will change when speaking a capital letter. This value is a percentage where a negative value lowers the pitch and a positive value raises it. For no pitch change you would use 0.",
            "type": "integer",
            "minimum": -100,
            "maximum": 100,
            "default": 30
          }
        },
        "speech.sapi5.pitch": {
          "schema": {
            "title": "SAPI5 Voice Pitch",
            "description": "The pitch of the current voice, from 0 to 100 (0 being the lowest pitch and 100 being the highest).",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 50
          }
        },
        "speech.sapi5.rate": {
          "schema": {
            "title": "SAPI5 Speech Rate",
            "description": "The speech rate, from 0 to 100 (0 being the slowest, 100 being the fastest).",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 50
          }
        },
        "speech.sapi5.sayCapForCapitals": {
          "schema": {
            "title": "SAPI5 Announce Capitals",
            "description": "Whether to say the word \"cap\" before any capital letter when spoken as an individual character such as when spelling. Usually NVDA raises the pitch slightly for any capital letter but some synthesizers may not support this well so perhaps this option may be of use.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.sapi5.trustVoiceLanguage": {
          "schema": {
            "title": "SAPI5 Trust Voice Language",
            "description": "Whether the current voice's language can be trusted when processing symbols and characters. This is on by default.  If you find that NVDA is reading punctuation in the wrong language for a particular synthesizer or voice you may wish to turn this off to force NVDA to use its global language setting instead.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.sapi5.useSpellingFunctionality": {
          "schema": {
            "title": "SAPI5 Use Spelling Functionality",
            "description": "Some words consist of only one character but the pronunciation is different depending on whether the character is being spoken as an individual character (such as when spelling) or a word. For example in English \"a\" is both a letter and a word and is pronounced differently in each case. This option allows the synthesizer to differentiate between these two cases if the synthesizer supports this. Most synthesizers do support it. This option should generally be enabled. However some Microsoft Speech API synthesizers do not implement this correctly and behave strangely when it is enabled. If you are having problems with the pronunciation of individual characters try disabling this option.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.sapi5.voice": {
          "schema": {
            "title": "SAPI5 Voice",
            "description": "The voice to use.",
            "enum": [
              "Microsoft David Desktop - English (United States)",
              "Microsoft Zira Desktop - English (United States)"
            ],
            "enumLabels": [
              "Microsoft David Desktop - English (United States)",
              "Microsoft Zira Desktop - English (United States)"
            ],
            "default": "Microsoft David Desktop - English (United States)"
          }
        },
        "speech.sapi5.volume": {
          "schema": {
            "title": "SAPI5 Speech Volume",
            "description": "The speech volume, from 0 to 100 (0 being the lowest volume and 100 being the highest).",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 100
          }
        },
        "speech.silence.autoDialectSwitching": {
          "schema": {
            "title": "\"No Speech\" Automatic Dialect Switching",
            "description": "When using \"no speech\", whether or not dialect changes should be made rather than just actual language changes. For example if reading in an English U.S. voice but a document specifies that some text is in English U.K. then the synthesizer will switch accents if this option is enabled. This option is disabled by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.silence.autoLanguageSwitching": {
          "schema": {
            "title": "\"No Speech\" Automatic Language Switching",
            "description": "When using \"no speech\", whether NVDA should switch speech synthesizer languages automatically if the text being read specifies its language. This option is enabled by default. Currently only the eSpeak synthesizer supports automatic language switching.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.silence.beepForCapitals": {
          "schema": {
            "title": "\"No Speech\" Beep for Capitals",
            "description": "When using oneCore, whether to make a small beep each time NVDA encounters a capitalized character by itself. Like the \"say cap for capitals\" setting this is useful for Synthesizers that can't change their pitch for capital letters.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.silence.capPitchChange": {
          "schema": {
            "title": "\"No Speech\" Capital Pitch Change Percentage",
            "description": "When using \"no speech\", the amount that the pitch of the voice will change when speaking a capital letter. This value is a percentage where a negative value lowers the pitch and a positive value raises it. For no pitch change you would use 0.",
            "type": "integer",
            "minimum": -100,
            "maximum": 100,
            "default": 30
          }
        },
        "speech.silence.sayCapForCapitals": {
          "schema": {
            "title": "\"No Speech\" Announce Capitals",
            "description": "Whether to say the word \"cap\" before any capital letter when spoken as an individual character such as when spelling. Usually NVDA raises the pitch slightly for any capital letter but some synthesizers may not support this well so perhaps this option may be of use.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "speech.silence.trustVoiceLanguage": {
          "schema": {
            "title": "\"No Speech\" Trust Voice Language",
            "description": "Whether the current voice's language can be trusted when processing symbols and characters. This is on by default.  If you find that NVDA is reading punctuation in the wrong language for a particular synthesizer or voice you may wish to turn this off to force NVDA to use its global language setting instead.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.silence.useSpellingFunctionality": {
          "schema": {
            "title": "\"No Speech\" Use Spelling Functionality",
            "description": "Some words consist of only one character but the pronunciation is different depending on whether the character is being spoken as an individual character (such as when spelling) or a word. For example in English \"a\" is both a letter and a word and is pronounced differently in each case. This option allows the synthesizer to differentiate between these two cases if the synthesizer supports this. Most synthesizers do support it. This option should generally be enabled. However some Microsoft Speech API synthesizers do not implement this correctly and behave strangely when it is enabled. If you are having problems with the pronunciation of individual characters try disabling this option.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speech.symbolLevel": {
          "schema": {
            "title": "Punctuation/Symbol Level",
            "description": "The amount of punctuation and other symbols that should be spoken as words.  This option applies to all synthesizers not just the currently active synthesizer.",
            "enum": [
              0,
              100,
              200,
              300
            ],
            "enumLabels": [
              "None",
              "Some",
              "Most",
              "All"
            ],
            "default": 100
          }
        },
        "speech.synth": {
          "schema": {
            "title": "Synthesizer",
            "description": "The synthesizer you wish NVDA to use for speech output. The \"No speech\" option allows you to use NVDA with no speech output what so ever.  This may be useful for someone who wishes to only use NVDA with Braille, or perhaps to sighted developers who only wish to use the Speech Viewer.",
            "enum": [
              "auto",
              "espeak",
              "sapi4",
              "sapi5",
              "oneCore",
              "silence"
            ],
            "enumLabels": [
              "auto",
              "eSpeak",
              "sapi4",
              "sapi5",
              "oneCore",
              "No  Speech"
            ],
            "default": "auto"
          }
        },
        "speechViewer.autoPositionWindow": {
          "schema": {
            "title": "Speech Viewer",
            "description": "Whether to enable the speech viewer (in real time).",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "speechViewer.showSpeechViewerAtStartup": {
          "schema": {
            "title": "Show Speech Viewer on Startup",
            "description": "Whether to enable the speech viewer on startup.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "touch.touchTyping": {
          "schema": {
            "title": "Touch Typing Mode",
            "description": "Whether to require a single or double key press to type a literal character.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "update.autoCheck": {
          "schema": {
            "title": "Automatically Check for NVDA Updates",
            "description": "If this is enabled NVDA will automatically check for updated versions of NVDA and inform you when an update is available. You can also manually check for updates by selecting Check for updates under Help in the NVDA menu.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "update.startupNotification": {
          "schema": {
            "title": "Notify of Pending Update on Startup",
            "description": "Whether to notify about an update that is waiting to be installed when NVDA is started.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "uwpOcr.language": {
          "schema": {
            "title": "Recognition Language",
            "description": "The language to use for text recognition.",
            "enum": [
              "English(United States)"
            ],
            "enumLabels": [
              "English(United States)"
            ],
            "default": "English(United States)"
          }
        },
        "virtualBuffers.autoPassThroughOnCaretMove": {
          "schema": {
            "title": "Automatic focus mode for caret movement",
            "description": "This option when checked allows NVDA to enter and leave focus mode when using arrow keys. For example if arrowing down a webpage and you land on an edit box NVDA will automatically bring you into focus mode. If you arrow out of the edit box NVDA will put you back in browse mode.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "False"
          }
        },
        "virtualBuffers.autoPassThroughOnFocusChange": {
          "schema": {
            "title": "Automatic focus mode for focus changes",
            "description": "Whether to invoke focus mode if focus changes. For example when on a web page if you press tab and you land on a form if this option is checked focus mode will automatically be invoked.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "virtualBuffers.autoSayAllOnPageLoad": {
          "schema": {
            "title": "Automatic Say All on page load",
            "description": "Whether to automatically read a page after it loads in browse mode. This option is enabled by default.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "virtualBuffers.linesPerPage": {
          "schema": {
            "title": "Lines per Page",
            "description": "The amount of lines you will move by when pressing page up or page down while in browse mode.",
            "type": "integer",
            "minimum": 5,
            "maximum": 150,
            "default": 25
          }
        },
        "virtualBuffers.maxLineLength": {
          "schema": {
            "title": "Maximum Line Length",
            "description": "The maximum length of a line in browse mode (in characters).",
            "type": "integer",
            "minimum": 10,
            "maximum": 250,
            "default": 100
          }
        },
        "virtualBuffers.passThroughAudioIndication": {
          "schema": {
            "title": "Audio indication of focus and browse modes",
            "description": "Whether to play special sounds when NVDA switches between browse mode and focus mode rather than speaking the change.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "virtualBuffers.trapNonCommandGestures": {
          "schema": {
            "title": "Trap all non-command gestures from reaching the document",
            "description": "Enabled by default this option allows you to choose if gestures (such as key presses) that do not result in an NVDA command and are not considered to be a command key in general should be trapped from going through to the document you are currently focused on. As an example if enabled if the letter j was pressed it would be trapped from reaching the document even though it is not a quick navigation command nor is it likely to be a command in the application itself.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        },
        "virtualBuffers.useScreenLayout": {
          "schema": {
            "title": "Use Screen Layout",
            "description": "Whether content in browse mode should place content such as links and other fields on their own line or if it should keep them in the flow of text as it is visually shown. If the option is enabled then things will stay as they are visually shown but if it is disabled then fields will be placed on their own line.",
            "enum": [
              "True",
              "False"
            ],
            "enumLabels": [
              "True",
              "False"
            ],
            "default": "True"
          }
        }
      },
      "type": "gpii.settingsHandlers.INISettingsHandler",
      "liveness": "manualRestart",
      "options": {
        "filename": "${{environment}.APPDATA}\\nvda\\nvda.ini"
      }
    }
  },
  "contexts": {
    "OS": [
      {
        "windows": {
          "id": "win32",
          "version": ">=5.0"
        }
      }
    ]
  },
  "launchHandlers": {
    "launcher": {
      "type": "gpii.launchHandlers.flexibleHandler",
      "options": {
        "getState": [
          {
            "type": "gpii.processReporter.find",
            "command": "nvda.exe"
          }
        ],
        "setTrue": [
          {
            "type": "gpii.launch.exec",
            "command": "\"${{registry}.HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\nvda.exe\\}\""
          }
        ],
        "setFalse": [
          {
            "type": "gpii.windows.closeProcessByName",
            "filename": "nvda_service.exe"
          },
          {
            "type": "gpii.windows.closeProcessByName",
            "filename": "nvda.exe"
          }
        ]
      }
    }
  },
  "isInstalled": [
    {
      "type": "gpii.deviceReporter.registryKeyExists",
      "hKey": "HKEY_LOCAL_MACHINE",
      "path": "Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\nvda.exe",
      "subPath": "",
      "dataType": "REG_SZ"
    }
  ]
}
