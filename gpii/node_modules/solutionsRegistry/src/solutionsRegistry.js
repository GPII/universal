/*!
GPII Preferences Server

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        path = require("path"),
        gpii = fluid.registerNamespace("gpii");

    fluid.require("gpiiFramework", require);
    fluid.require("./solutionGet.js", require);
    fluid.require("./solutionPost.js", require);
    fluid.require("./solutionQuery.js", require);

    fluid.defaults("gpii.solutionsRegistry", {
        gradeNames: ["gpii.app", "autoInit"],
        handlers: {
            solutionGet: {
                route: "/solution/:id",
                type: "get"
            },
            solutionPost: {
                route: "/solution/:id",
                type: "post"
            },
            solutionQuery: {
                route: "/solution?:query",
                type: "get"
            }
        },
        solutionRegistryUrl: "",
        solutionQueryUrl: "",
        root: path.join(__dirname, ".."),
        components: {
            rawSolutionSource: {
                type: "gpii.dataSource",
                options: {
                    url: "{gpii.solutionsRegistry}.options.solutionRegistryUrl",
                    writable: true,
                    termMap: {
                        id: "%id"
                    }
                }
            },
            rawSolutionQuerySource: {
                type: "gpii.dataSource",
                options: {
                    url: "{gpii.solutionsRegistry}.options.solutionQueryUrl",
                    termMap: {
                        os: "%os"
                    }
                }
            },
            solutionSource: {
                type: "gpii.callbackWrappingDataSource"
            },
            solutionQuerySource: {
                type: "gpii.callbackWrappingDataSource"
            }
        }
    });
    
})();