/*
 * GPII Solutions Registry GET Handler
 *
 * Copyright 2012 OCAD University
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * The research leading to these results has received funding from the European Union's
 * Seventh Framework Programme (FP7/2007-2013)
 * under grant agreement no. 289016.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii");

    fluid.defaults("kettle.requests.request.handler.solutionGet", {
        gradeNames: ["autoInit", "fluid.littleComponent"],
        invokers: {
            handle: {
                funcName: "gpii.handleSolutionGet",
                args: ["{request}.req.params.id", "{requestProxy}.", "{solutionsRegistry}.solutionSource"],
                dynamic: true
            }
        }
    });

    gpii.handleSolutionGet = function (id, requestProxy, solutionSource) {
        solutionSource.get({
            id: id
        }, requestProxy.events.onSuccess.fire);
    };

})();