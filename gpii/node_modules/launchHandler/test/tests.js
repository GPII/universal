/*!
Launch Handler Testing

Copyright 2012 Raising the Floor - International

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {
    var fluid = require("infusion");
	gpii = fluid.registerNamespace("gpii");

	asyncTest("gpii.launchHandler.exec() works as expected", function () {
		expect(2);
 		//test set:
 		//run tail command with the -f (follow) flag on.. this will keep the process alive
 		var returnval = gpii.launchHandler.exec({
			command: "tail",
			args:  ["-f", "tests.js"]
		});	
		//we should get a proper pid
		ok((returnval.termMap && returnval.termMap.pid >= 0), "Exec returned a proper pid");
		
		//TEST STOPPING
 		spawnedProcess = returnval.process;
 		//set listener to process kill and expect to be fired on delete call to exec
 		spawnedProcess.on("exit", function (code) {
 			ok(true, "child process recieved exit call (with exit code " + code+ ")");
 			start();
 		});
 		var payload = { pid: "%pid", termMap: returnval.termMap };
 		//send kill signal:
 		gpii.launchHandler.exec(payload);
	});
}());