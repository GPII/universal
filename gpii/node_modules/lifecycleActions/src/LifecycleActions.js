/*!
Standard Lifecycle Actions Definitions

Copyright 2012 Antranig Basman

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {
    "use strict";

    var fluid = require("infusion"),
        child_process = require("child_process"),
        gpii = fluid.registerNamespace("gpii");

    fluid.registerNamespace("gpii.launch");
    fluid.registerNamespace("gpii.lifecycleActions");

    fluid.defaults("gpii.launch.exec", {
        gradeNames: "fluid.function",
        argumentMap: {
            command: 0,
            options: 1
        }
    });

    gpii.launch.exec = child_process.exec;

    fluid.defaults("gpii.launch.spawn", {
        gradeNames: "fluid.function",
        argumentMap: {
            command: 0,
            args: 1,
            options: 2
        }
    });

    gpii.launch.spawn = child_process.spawn;


    gpii.lifecycleActions.deleteFile = function (fileName) {
        fs.unlinkSync(fileName);
        fluid.log("Deleted file");
    };

    fluid.defaults("gpii.lifecycleActions.createFile", {
        gradeNames: "fluid.function",
        argumentMap: {
            fileName: 0,
            content: 1
        }
    });

    gpii.lifecycleActions.createFile = function (fileName, content) {
        fs.writeFileSync(fileName, content);
        fluid.log("Created new file");
    };

    fluid.defaults("gpii.lifecycleActions.download", {
        gradeNames: "fluid.function",
        argumentMap: {
            URL: 0,
            localFolder: 1
        }
    });

    gpii.lifecycleActions.download = function (URL, localFolder) {
        var promise = fluid.promise();
        var file = fs.readFileSync(URL);
        fs.writeFileSync(localFolder, file);
        fluid.log("Downloaded and stored " + URL + " to " + localFolder);
    };

})();
