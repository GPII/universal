/*

Integration Testing

Copyright 2012 Raising the Floor - International

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

/*global require*/

(function () {

    "use strict";

    // This loads universal.
    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii"),
        jqUnit = fluid.require("jqUnit");

    gpii.tests = fluid.registerNamespace("gpii.tests");

    fluid.defaults("gpii.tests.testEnvironment", {
        gradeNames: ["autoInit", "fluid.littleComponent"],
        preInitFunction: "gpii.tests.testEnvironment.preInit",
        finalInitFunction: "gpii.tests.testEnvironment.finalInit",
        components: {
            context: {
                type: "fluid.typeFount",
                options: {
                    targetType: "gpii.test"
                }
            }
        }
    });

    gpii.tests.testEnvironment.preInit = function (that) {
        that.test = function(message, func) {
            jqUnit.test(message, function() {
                fluid.withEnvironment(that.environment, func);
            });
        };

        that.asyncTest = function(message, func) {
            jqUnit.asyncTest(message, function() {
                fluid.withEnvironment(that.environment, func);
            });
        };
    };

    gpii.tests.testEnvironment.finalInit = function (that) {
        that.environment = fluid.transform(that.options.components, function (val, name) {
            return that[name];
        });
    };

}());