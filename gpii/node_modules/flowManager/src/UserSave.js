/*
 * GPII User Save Handler
 *
 * Copyright 2013 OCAD University
 * Copyright 2018 OCAD University
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * The research leading to these results has received funding from the European Union's
 * Seventh Framework Programme (FP7/2007-2013)
 * under grant agreement no. 289016.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

"use strict";

var fluid = require("infusion"),
    gpii = fluid.registerNamespace("gpii");

fluid.registerNamespace("gpii.flowManager");

fluid.defaults("gpii.flowManager.userSave.handler", {
    gradeNames: ["kettle.request.http"],
    invokers: {
        handleRequest: {
            funcName: "gpii.flowManager.userSave.handleRequest",
            args: [
                "{flowManager}.preferencesDataSource",
                "{request}.req.params.gpiiKey",
                "{request}.req.body",
                "{request}"
            ]
        }
    }
});

gpii.flowManager.userSave.handleRequest = function (preferencesDataSource, gpiiKey, preferences, request) {
    gpiiKey = gpiiKey || "";
    var directModel = {
        gpiiKey: gpiiKey
    };
    var writeMethod = request.req.method.toUpperCase();
    var promise = preferencesDataSource.set(directModel, preferences, { writeMethod: writeMethod });
    promise.then(request.events.onSuccess.fire, request.events.onError.fire);
};
