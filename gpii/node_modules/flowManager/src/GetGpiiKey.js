/**
 * GPII get GPII key Handler
 *
 * Copyright 2014 Raising the Floor - International
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * The research leading to these results has received funding from the European Union's
 * Seventh Framework Programme (FP7/2007-2013)
 * under grant agreement no. 289016.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

"use strict";

var fluid = require("infusion");
var gpii = fluid.registerNamespace("gpii");

fluid.defaults("gpii.flowManager.getGpiiKey.handler", {
    gradeNames: ["kettle.request.http", "gpii.flowManager.sessionAware"],
    invokers: {
        handleRequest: {
            funcName: "gpii.flowManager.getGpiiKey.handleRequest",
            args: ["{that}", "{request}.events"
            ]
        }
    }
});

gpii.flowManager.getGpiiKey.handleRequest = function (that, events) {
    that.withSession(function (session, gpiiKeys) {
        fluid.log("Reporting currently logged in GPII key(s) as: ", gpiiKeys);
        events.onSuccess.fire(gpiiKeys);
    }, "No user currently logged in to the system");
};
