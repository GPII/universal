/*
 * GPII User Update Handler
 *
 * Copyright 2013 OCAD University
 * Copyright 2014 Astea
 * Copyright 2014 Raising the Floor - international
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * The research leading to these results has received funding from the European Union's
 * Seventh Framework Programme (FP7/2007-2013)
 * under grant agreement no. 289016.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii");

    fluid.defaults("gpii.flowManager.userUpdate.handler", {
        gradeNames: ["kettle.request.ws", "gpii.flowManager.sessionAware"],
        listeners: {
            onReceiveMessage: {
                funcName: "gpii.flowManager.userUpdate.handleUpdate",
                args: [
                    "{that}",
                    "{arguments}.1",
                    "{flowManager}.transformer",
                    "{flowManager}.lifecycleManager"
                ]
            }
        }
    });

    // TODO: This endpoint does nothing useful in particular and has absolutely no useful tests

    gpii.flowManager.userUpdate.handleUpdate = function (that, data, transformer, lifecycleManager) {
        console.log("userUpdate HANDLEUPDATE with data ", data);
        that.withSession(function (session) {
            var updatedConfig = fluid.extend(true, {}, session.activeConfiguration, { applications: data });
            var lifecycleInstructions = transformer.configurationToSettings(updatedConfig, session.solutionsRegistryEntries);
            var finalPayload = {
                lifecycleInstructions: lifecycleInstructions,
                userToken: session.userToken
            };
            lifecycleManager.update(finalPayload, function (response) {
                console.log("Sending response ", response);

                if (response.success) {
                    // Update the session.
                    session.activeConfiguration = updatedConfig;
                }
                that.sendMessage(response);
            });
        }, "Cannot update settings with no active users", that.sendMessage);
    };
})();
