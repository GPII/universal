/*!
GPII User Logout Component

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        uuid = require("node-uuid"),
        gpii = fluid.registerNamespace("gpii");

    fluid.demands("gpii.requests.request.handler", "userLogout", {
        options: {
            invokers: {
                handle: {
                    funcName: "gpii.requests.request.handler.userLogout",
                    args: ["{request}", "{lifecycleManager}"]
                }
            }
        }
    });

    gpii.requests.request.handler.userLogout = function (request, lifecycleManager) {
        var res = request.res;
        var userToken = request.req.params.token;
        // TODO: clarify semantics of multiple active start/stop cycles. 
        lifecycleManager.stop({userToken: userToken}, function (response) {
            if (response && response.isError) {
                return res.send(response, 500);
            }
            fluid.log("Launch manager returned: ", response);
            res.send("User with token " + userToken + " was successfully logged out.", 200);
        });
    };

})();