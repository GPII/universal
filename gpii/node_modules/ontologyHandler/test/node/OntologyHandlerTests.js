/*
Ontology Handler Tests

Copyright 2014 Raising the Floor - International

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

// TODO: Convert these to a set of browser tests

/* eslint strict: ["error", "function"] */

(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii"),
        jqUnit = fluid.registerNamespace("jqUnit"),
        kettle = require("kettle");

    kettle.loadTestingSupport();

    require("ontologyHandler");

    fluid.defaults("gpii.ontologyHandler.tests", {
        gradeNames: ["fluid.test.testEnvironment"],
        components: {
            tester: {
                type: "gpii.ontologyHandler.tests.testCaseHolder"
            }
        }
    });

    var getTransformSpecTests = {
        specs: {
            "A-B": {
                "a1": "b1",
                "a2": "b2"
            },
            "C-B": {
                "c1": "b1",
                "c2": "b2"
            },
            "B-D": {
                "b1": "d1",
                "b2": "d2"
            }
        },
        tests: [
            {
                from: "B",
                to: "D",
                expect: {
                    "b1": "d1",
                    "b2": "d2"
                }
            }, {
                from: "B",
                to: "A",
                expect: {
                    transform: [
                        {
                            type: "fluid.transforms.value",
                            inputPath: "a1",
                            outputPath: "b1"
                        }, {
                            type: "fluid.transforms.value",
                            inputPath: "a2",
                            outputPath: "b2"
                        }
                    ]
                }
            }
        ]
    };

    gpii.ontologyHandler.tests.getTransformSpec = function () {
        fluid.each(getTransformSpecTests.tests, function (test) {
            var res = gpii.ontologyHandler.getTransformSpec(getTransformSpecTests.specs,
                   test.from, test.to);
            jqUnit.assertDeepEq("Testing getTransformSpec from " + test.from + " to " + test.to,
                test.expect, res);
        });
    };

    var prefsToOntologyTests = [
        {
            description: "Basic transform, no inversion",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            A: "I am the a-man",
                            B: "I am the b-man"
                        }
                    }
                }
            },
            from: "capitals",
            to: "miniscule",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        preferences: {
                            a: "I am the a-man",
                            b: "I am the b-man"
                        }
                    }
                }
            }
        }, {
            description: "Basic single transform with inversion",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            a: "I am the a-man",
                            b: "I am the b-man"
                        }
                    }
                }
            },
            from: "miniscule",
            to: "capitals",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        preferences: {
                            A: "I am the a-man",
                            B: "I am the b-man"
                        }
                    }
                }
            }
        }, {
            description: "no matching ontology transform specs",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            cats: "meow",
                            dogs: "wruf"
                        }
                    }
                }
            },
            from: "bogus",
            to: "miniscule",
            expect: {}
        }, {
            description: "Same ontology requested",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            a: "I am the a-man",
                            b: "I am the b-man"
                        }
                    }
                }
            },
            from: "miniscule",
            to: "miniscule",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            a: "I am the a-man",
                            b: "I am the b-man"
                        }
                    }
                }
            }
        }, {
            description: "testing the metadata translations",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [{
                            type: "test",
                            scope: [ "a", "b" ]
                        }],
                        preferences: {
                            a: "I am the a-man",
                            b: "I am the b-man"
                        }
                    }
                },
                metadata: [{
                    type: "outer",
                    scope: [ "c" ]
                }]
            },
            from: "miniscule",
            to: "capitals",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [{
                            type: "test",
                            scope: [ "A", "B" ]
                        }],
                        preferences: {
                            A: "I am the a-man",
                            B: "I am the b-man"
                        }
                    }
                },
                metadata: [{
                    type: "outer",
                    scope: [ "C" ]
                }]
            }
        }, {
            description: "testing the metadata translations",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [{
                            type: "test",
                            scope: [ "a", "b" ]
                        }],
                        preferences: {
                            a: "I am the a-man",
                            b: "I am the b-man"
                        }
                    }
                },
                metadata: [{
                    type: "outer",
                    scope: [ "c" ]
                }]
            },
            from: "miniscule",
            to: "capitals",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [{
                            type: "test",
                            scope: [ "A", "B" ]
                        }],
                        preferences: {
                            A: "I am the a-man",
                            B: "I am the b-man"
                        }
                    }
                },
                metadata: [{
                    type: "outer",
                    scope: [ "C" ]
                }]
            }
        }, {
            description: "testing the metadata wildcard explosions",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [{
                            type: "test",
                            scope: [ "x.*" ]
                        }],
                        preferences: {
                            x: {
                                a: "I was x.a"
                            }
                        }
                    }
                },
                metadata: [{
                    type: "outer",
                    scope: [ "y.*" ]
                }]
            },
            from: "deep",
            to: "capitals",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [{
                            type: "test",
                            scope: [ "A", "B" ]
                        }],
                        preferences: {
                            A: "I was x.a"
                        }
                    }
                },
                metadata: [{
                    type: "outer",
                    scope: [ "C" ]
                }]
            }
        }, {
            description: "testing multiple contexts and non-transformable settings",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [{
                            type: "test",
                            scope: [ "x.*" ]
                        }],
                        preferences: {
                            x: {
                                a: "I was x.a"
                            }
                        }
                    },
                    "other": {
                        name: "the other",
                        metadata: [],
                        preferences: {
                            y: {
                                q: "I won't survive"
                            }
                        }
                    }
                },
                metadata: [{
                    type: "outer",
                    scope: [ "*" ]
                }]
            },
            from: "deep",
            to: "capitals",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [{
                            type: "test",
                            scope: [ "A", "B" ]
                        }],
                        preferences: {
                            A: "I was x.a"
                        }
                    },
                    "other": {
                        name: "the other",
                        preferences: {}
                    }
                },
                metadata: [{
                    type: "outer",
                    scope: [ "*" ]
                }]
            }
        }
    ];

    gpii.ontologyHandler.tests.prefsToOntology = function (ontologyHandler) {
        fluid.each(prefsToOntologyTests, function (test) {
            var res = ontologyHandler.prefsToOntology(test.prefs, test.from, test.to);
            jqUnit.assertDeepEq("gpii.ontologyHandler.prefsToOntology: " + test.description,
                test.expect, res);
        });
    };

    var rawPrefsToOntologyTests = [
        {
            description: "Basic transform, no inversion",
            rawPrefs: {
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                A: "I am the a-man",
                                B: "I am the b-man"
                            }
                        }
                    }
                }
            },
            to: "miniscule",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        preferences: {
                            a: "I am the a-man",
                            b: "I am the b-man"
                        }
                    }
                }
            }
        }, {
            description: "Basic single transform with inversion",
            rawPrefs: {
                miniscule: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                a: "I am the a-man",
                                b: "I am the b-man"
                            }
                        }
                    }
                }
            },
            to: "capitals",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        preferences: {
                            A: "I am the a-man",
                            B: "I am the b-man"
                        }
                    }
                }
            }
        }, {
            description: "Two transform, normal and with inversion",
            rawPrefs: {
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                A: "I am the a-man"
                            }
                        }
                    }
                },
                names: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                bassman: "Bum da da dum BASS"
                            }
                        }
                    }
                }
            },
            to: "miniscule",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        preferences: {
                            a: "I am the a-man",
                            b: "Bum da da dum BASS"
                        }
                    }
                }
            }
        }, {
            description: "Some of the preferences already exist in the requested ontology",
            rawPrefs: {
                miniscule: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                a: "I am the a-man"
                            }
                        }
                    }
                },
                names: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                bassman: "Bum da da dum BASS"
                            }
                        }
                    }
                }
            },
            to: "miniscule",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        preferences: {
                            a: "I am the a-man",
                            b: "Bum da da dum BASS"
                        }
                    }
                }
            }
        }, {
            description: "no matching ontology transform specs",
            rawPrefs: {
                bogus: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                cats: "meow",
                                dogs: "wruf"
                            }
                        }
                    }
                }
            },
            to: "miniscule",
            expect: {
                contexts: {}
            }
        }, {
            description: "transforms from two ontologies (normal and with inversion) to third - " +
                "with metadata",
            rawPrefs: {
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [{
                                type: "test",
                                scope: [ "A" ]
                            }],
                            preferences: {
                                A: "I am the a-man"
                            }
                        }
                    }
                },
                names: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [{
                                type: "test2",
                                scope: [ "adam" ]
                            }],
                            preferences: {
                                bassman: "Bum da da dum BASS"
                            }
                        }
                    }
                }
            },
            to: "miniscule",
            expect: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [{
                            type: "test",
                            scope: [ "a" ]
                        }, {
                            type: "test2",
                            scope: [ "a" ]
                        }],
                        preferences: {
                            a: "I am the a-man",
                            b: "Bum da da dum BASS"
                        }
                    }
                }
            }
        }
    ];

    gpii.ontologyHandler.tests.rawPrefsToOntology = function (ontologyHandler) {
        fluid.each(rawPrefsToOntologyTests, function (test) {
            var res = ontologyHandler.rawPrefsToOntology(test.rawPrefs, test.to);
            jqUnit.assertDeepEq("gpii.ontologyHandler.rawPrefsToOntology: " + test.description,
                test.expect, res);
        });
    };

    var addPrefsToRawPrefsTests = [
        {
            description: "Add prefs to an ontology matching the one in the raw preferences set",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            A: "I am the a-man",
                            B: "I am the b-man"
                        }
                    }
                }
            },
            prefsView: "capitals",
            rawPrefs: {
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                A: "Who am I?"
                            }
                        }
                    }
                }
            },
            expect: {
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            preferences: {
                                A: "I am the a-man",
                                B: "I am the b-man"
                            }
                        }
                    }
                }
            }
        }, {
            description: "Overwriting existing preference which is stored in different view",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            A: "I am the a-man"
                        }
                    }
                }
            },
            prefsView: "capitals",
            rawPrefs: {
                miniscule: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                a: "Who am I?"
                            }
                        }
                    }
                }
            },
            expect: {
                miniscule: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            preferences: {
                            }
                        }
                    }
                },
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            preferences: {
                                A: "I am the a-man"
                            }
                        }
                    }
                }
            }
        }, {
            description: "Modifying part of another view and overwriting the same (existing) view",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            A: "I am the a-man"
                        }
                    }
                }
            },
            prefsView: "capitals",
            rawPrefs: { // this is actually theoretically an illegal raw prefs set
                miniscule: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                a: "Who am I?",
                                b: "I'm still here"
                            }
                        }
                    }
                },
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                B: "I am a bee"
                            }
                        }
                    }
                }
            },
            expect: {
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            preferences: {
                                A: "I am the a-man"
                            }
                        }
                    }
                },
                miniscule: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            preferences: {
                                b: "I'm still here"
                            }
                        }
                    }
                }
            }
        }, {
            description: "All other ontologies unaffected due to lack of transformation file",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            A: "I am the a-man"
                        }
                    }
                }
            },
            prefsView: "capitals",
            rawPrefs: {
                bogus: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                cat: "I'm very decent"
                            }
                        }
                    }
                },
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                B: "I am a bee"
                            }
                        }
                    }
                }
            },
            expect: {
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            preferences: {
                                A: "I am the a-man"
                            }
                        }
                    }
                },
                bogus: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            preferences: {
                                cat: "I'm very decent"
                            }
                        }
                    }
                }
            }
        }, {
            description: "All other ontologies unaffected due to lack of specific setting transformation",
            prefs: {
                contexts: {
                    "gpii-default": {
                        name: "default",
                        metadata: [],
                        preferences: {
                            C: "you later"
                        }
                    }
                }
            },
            prefsView: "capitals",
            rawPrefs: {
                miniscule: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                d: "secret setting"
                            }
                        }
                    }
                },
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            metadata: [],
                            preferences: {
                                B: "I am a bee"
                            }
                        }
                    }
                }
            },
            expect: {
                capitals: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            preferences: {
                                C: "you later"
                            }
                        }
                    }
                },
                miniscule: {
                    contexts: {
                        "gpii-default": {
                            name: "default",
                            preferences: {
                                d: "secret setting"
                            }
                        }
                    }
                }
            }
        }
    ];

    gpii.ontologyHandler.tests.addPrefsToRawPrefs = function (ontologyHandler) {
        fluid.each(addPrefsToRawPrefsTests, function (test) {
            var res = ontologyHandler.addPrefsToRawPrefs(test.prefs, test.prefsView, test.rawPrefs);
            jqUnit.assertDeepEq("gpii.ontologyHandler.addPrefsToRawPrefs: " + test.description,
                test.expect, res);
        });

    };

    fluid.defaults("gpii.ontologyHandler.tests.testCaseHolder", {
        gradeNames: ["fluid.test.testCaseHolder"],
        components: {
            "ontologyHandler": {
                type: "gpii.ontologyHandler",
                options: {
                    ontologySourceListDir: __dirname + "/data/ontologies/"
                }
            }
        },
        modules: [{
            name: "OntologyHandlerTests",
            tests: [{
                expect: 2,
                name: "gpii.ontologyHandler.tests.getTransformSpec tests",
                func: "gpii.ontologyHandler.tests.getTransformSpec"
            }, {
                expect: prefsToOntologyTests.length,
                name: "gpii.ontologyHandler.prefsToOntology tests",
                func: "gpii.ontologyHandler.tests.prefsToOntology",
                args: [ "{ontologyHandler}" ]
            }, {
                expect: rawPrefsToOntologyTests.length,
                name: "gpii.ontologyHandler.rawPrefsToOntology tests",
                func: "gpii.ontologyHandler.tests.rawPrefsToOntology",
                args: [ "{ontologyHandler}" ]
            }, {
                expect: addPrefsToRawPrefsTests.length,
                name: "gpii.ontologyHandler.addPrefsToRawPrefs tests",
                func: "gpii.ontologyHandler.tests.addPrefsToRawPrefs",
                args: [ "{ontologyHandler}" ]
            }]
        }]
    });

    module.exports = kettle.test.bootstrap("gpii.ontologyHandler.tests");

})();
