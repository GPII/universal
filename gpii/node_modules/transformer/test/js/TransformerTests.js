/*!
GPII Settings Transformer Tests

Copyright 2012 OCAD University
Copyright 2013-2014 Raising the Floor

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

The research leading to these results has received funding from the European Union's
Seventh Framework Programme (FP7/2007-2013) under grant agreement no. 289016.

You may obtain a copy of the License at
https://github.com/GPII/universal/blob/master/LICENSE.txt
*/

/*global jqUnit */

"use strict";

var fluid = fluid || require("infusion"),
    gpii = fluid.registerNamespace("gpii");
    
fluid.setLogging(true);

(function () {
    fluid.registerNamespace("gpii.tests.transformer");

    var testSolutionsEntry = {
        "com.microsoft.windows.magnifier": {
            "name": "Windows Built-in Screen Magnifier",
            "contexts": {
                "OS": [
                    {
                        "id": "win32",
                        "version": ">=5.0"
                    }
                ]
            },
            "settingsHandlers": [
                {
                    "type": "gpii.windows.registrySettingsHandler.set",
                    "options": {
                        "hKey": "HKEY_CURRENT_USER",
                        "path": "Software\\Microsoft\\ScreenMagnifier",
                        "dataTypes": {
                            "Magnification": "REG_DWORD",
                            "Invert": "REG_DWORD",
                            "FollowFocus": "REG_DWORD",
                            "FollowCaret": "REG_DWORD",
                            "FollowMouse": "REG_DWORD",
                            "MagnificationMode": "REG_DWORD",
                            "ZoomIncrement": "REG_DWORD"
                        }
                    },
                    "capabilities": [
                        "applications.com\\.microsoft\\.windows\\.magnifier.id",
                        "display.screenEnhancement.screenMagnification.applications.com\\.microsoft\\.windows\\.magnifier.name"
                    ],
                    "capabilitiesTransformations": {
                        "Invert": "http://registry\\.gpii\\.net/common/invertColours",
                        "Magnification": {
                            "transform": {
                                "type": "fluid.transforms.round",
                                "input": {
                                    "transform": {
                                        "type": "fluid.transforms.linearScale",
                                        "valuePath": "http://registry\\.gpii\\.net/common/magnification",
                                        "factor": 100
                                    }
                                }
                            }
                        },
                        "transform": [
                            {
                                "type": "fluid.transforms.arrayToSetMembership",
                                "inputPath": "http://registry\\.gpii\\.net/common/tracking",
                                "presentValue": 1,
                                "missingValue": 0,
                                "options": {
                                    "focus": "FollowFocus",
                                    "caret": "FollowCaret",
                                    "mouse": "FollowMouse"
                                }
                            }
                        ],
                        "MagnificationMode": {
                            "transform": {
                                "type": "fluid.transforms.valueMapper",
                                "inputPath": "http://registry\\.gpii\\.net/common/magnifierPosition",
                                "options": {
                                    "FullScreen": {
                                        "outputValue": 2
                                    },
                                    "Lens": {
                                        "outputValue": 3
                                    },
                                    "LeftHalf": {
                                        "outputValue": 1
                                    },
                                    "RightHalf": {
                                        "outputValue": 1
                                    },
                                    "TopHalf": {
                                        "outputValue": 1
                                    },
                                    "BottomHalf": {
                                        "outputValue": 1
                                    },
                                    "Custom": {
                                        "outputValue": 2
                                    }
                                }
                            }
                        }
                    }
                }
            ],
            "lifecycleManager": {
                "start": [
                    "setSettings",
                    {
                        "type": "gpii.launch.exec",
                        "command": "${{environment}.SystemRoot}\\System32\\Magnify.exe"
                    }
                ],
                "stop": [
                    {
                        "type": "gpii.launch.exec",
                        "command": "${{environment}.SystemRoot}\\System32\\taskkill.exe /f /im Magnify.exe"
                    },
                    "restoreSettings"
                ]
            }
        },
        "eu.singularlogic.pixelsense.sociable": {
            "name": "Sociable",
            "contexts": {
                "OS": [
                    {
                        "id": "win32",
                        "version": ">=5.0"
                    }
                ]
            },
            "settingsHandlers": [
                {
                    "type": "gpii.settingsHandlers.XMLHandler.set",
                    "options": {
                        "filename": "C:\\Sociable\\Configuration.xml",
                        "encoding": "utf-8",
                        "xml-tag": "<?xml version=\"1.0\"?>"
                    },
                    "capabilities": [
                        "applications.eu\\.singularlogic\\.pixelsense\\.sociable.id"
                    ],
                    "capabilitiesTransformations": {
                        "user.$t": {
                            "literalValue": 1
                        },
                        "expert.$t": {
                            "literalValue": 1
                        },
                        "careCenter.$t": {
                            "literalValue": 1
                        },
                        "screenReaderTTSEnabled": {
                            "value": "http://registry\\.gpii\\.net/common/screenReaderTTSEnabled"
                        },
                        "highContrastEnabled": {
                            "value": "http://registry\\.gpii\\.net/common/highContrastEnabled"
                        },
                        "fontSize": {
                            "value": {
                                "transform": {
                                    "type": "gpii.transformer.quantize",
                                    "inputPath": "http://registry\\.gpii\\.net/common/fontSize",
                                    "ranges": [
                                        {
                                            "upperBound": 14,
                                            "output": "normal"
                                        },
                                        {
                                            "output": "large"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            ],
            "lifecycleManager": {
                "start": [
                    "setSettings",
                    {
                        "type": "gpii.launch.exec",
                        "command": "C:\\Sociable\\Cloud4All.exe"
                    }
                ],
                "stop": [
                    {
                        "type": "gpii.launch.exec",
                        "command": "C:\\Sociable\\Cloud4All.exe -stop"
                    },
                    "restoreSettings"
                ]
            }
        }
    };

    var testFixtures = [
        {
            name: "Application specific settings for the same application",
            input: {
                "applications": {
                    "com.microsoft.windows.magnifier": {
                        "active": true,
                        "settings": {
                            "http://registry.gpii.net/applications/com.microsoft.windows.magnifier": {
                                "FollowFocus": 0,
                                "FollowCaret": 1,
                                "FollowMouse": 1,
                                "Invert": false
                            }
                        }
                    }
                }
            },
            expected: {
                "com.microsoft.windows.magnifier": {
                    "lifecycleManager": testSolutionsEntry["com.microsoft.windows.magnifier"].lifecycleManager,
                    "name": testSolutionsEntry["com.microsoft.windows.magnifier"].name,
                    "settingsHandlers": [
                        {
                            "type": "gpii.windows.registrySettingsHandler.set",
                            "options": {
                                "dataTypes": {
                                    "FollowCaret": "REG_DWORD",
                                    "FollowFocus": "REG_DWORD",
                                    "FollowMouse": "REG_DWORD",
                                    "Invert": "REG_DWORD",
                                    "Magnification": "REG_DWORD",
                                    "MagnificationMode": "REG_DWORD",
                                    "ZoomIncrement": "REG_DWORD"
                                },
                                "hKey": "HKEY_CURRENT_USER",
                                "path": "Software\\Microsoft\\ScreenMagnifier"
                            },
                            "settings": {
                                "FollowCaret": 1,
                                "FollowFocus": 0,
                                "FollowMouse": 1,
                                "Invert": false
                            }
                        }
                    ]
                }
            }
        }, {
            name: "Common terms only",
            input: {
                "applications": {
                    "com.microsoft.windows.magnifier": {
                        "active": true,
                        "settings": {
                            "http://registry.gpii.net/common/tracking": [ "mouse", "caret" ]
                        }
                    }
                }
            },
            expected: {
                "com.microsoft.windows.magnifier": {
                    "lifecycleManager": testSolutionsEntry["com.microsoft.windows.magnifier"].lifecycleManager,
                    "name": testSolutionsEntry["com.microsoft.windows.magnifier"].name,
                    "settingsHandlers": [
                        {
                            "type": "gpii.windows.registrySettingsHandler.set",
                            "options": {
                                "dataTypes": {
                                    "FollowCaret": "REG_DWORD",
                                    "FollowFocus": "REG_DWORD",
                                    "FollowMouse": "REG_DWORD",
                                    "Invert": "REG_DWORD",
                                    "Magnification": "REG_DWORD",
                                    "MagnificationMode": "REG_DWORD",
                                    "ZoomIncrement": "REG_DWORD"
                                },
                                "hKey": "HKEY_CURRENT_USER",
                                "path": "Software\\Microsoft\\ScreenMagnifier"
                            },
                            "settings": {
                                "FollowCaret": 1,
                                "FollowFocus": 0,
                                "FollowMouse": 1
                            }
                        }
                    ]
                }
            }
        }, {
            name: "App specific overwrites common terms",
            input: {
                "applications": {
                    "com.microsoft.windows.magnifier": {
                        "active": true,
                        "settings": {
                            "http://registry.gpii.net/applications/com.microsoft.windows.magnifier": {
                                "FollowFocus": 0,
                                "Invert": false
                            },
                            "http://registry.gpii.net/common/invertColours": false
                        }
                    }
                }
            },
            expected: {
                "com.microsoft.windows.magnifier": {
                    "lifecycleManager": testSolutionsEntry["com.microsoft.windows.magnifier"].lifecycleManager,
                    "name": testSolutionsEntry["com.microsoft.windows.magnifier"].name,
                    "settingsHandlers": [
                        {
                            "type": "gpii.windows.registrySettingsHandler.set",
                            "options": {
                                "dataTypes": {
                                    "FollowCaret": "REG_DWORD",
                                    "FollowFocus": "REG_DWORD",
                                    "FollowMouse": "REG_DWORD",
                                    "Invert": "REG_DWORD",
                                    "Magnification": "REG_DWORD",
                                    "MagnificationMode": "REG_DWORD",
                                    "ZoomIncrement": "REG_DWORD"
                                },
                                "hKey": "HKEY_CURRENT_USER",
                                "path": "Software\\Microsoft\\ScreenMagnifier"
                            },
                            "settings": {
                                "Invert": false,
                                "FollowFocus": 0
                            }
                        }
                    ]
                }
            }
        }, {
            name: "Irelevant App specific settings are ignored",
            input: {
                "applications": {
                    "com.microsoft.windows.magnifier": {
                        "active": true,
                        "settings": {
                            "http://registry.gpii.net/applications/some.app": {
                                "settingA": 0
                            },
                            "http://registry.gpii.net/common/invertColours": false
                        }
                    }
                }
            },
            expected: {
                "com.microsoft.windows.magnifier": {
                    "lifecycleManager": testSolutionsEntry["com.microsoft.windows.magnifier"].lifecycleManager,
                    "name": testSolutionsEntry["com.microsoft.windows.magnifier"].name,
                    "settingsHandlers": [
                        {
                            "type": "gpii.windows.registrySettingsHandler.set",
                            "options": {
                                "dataTypes": {
                                    "FollowCaret": "REG_DWORD",
                                    "FollowFocus": "REG_DWORD",
                                    "FollowMouse": "REG_DWORD",
                                    "Invert": "REG_DWORD",
                                    "Magnification": "REG_DWORD",
                                    "MagnificationMode": "REG_DWORD",
                                    "ZoomIncrement": "REG_DWORD"
                                },
                                "hKey": "HKEY_CURRENT_USER",
                                "path": "Software\\Microsoft\\ScreenMagnifier"
                            },
                            "settings": {
                                "Invert": false
                            }
                        }
                    ]
                }
            }
        }, {
            name: "multi applications blocks",
            input: {
                "applications": {
                    "com.microsoft.windows.magnifier": {
                        "active": true,
                        "settings": {
                            "http://registry.gpii.net/applications/com.microsoft.windows.magnifier": {
                                "Invert": false
                            }
                        }
                    },
                    "eu.singularlogic.pixelsense.sociable": {
                        "settings": {
                            "http://registry.gpii.net/common/fontSize": 12
                        }
                    }
                }
            },
            expected: {
                "com.microsoft.windows.magnifier": {
                    "lifecycleManager": testSolutionsEntry["com.microsoft.windows.magnifier"].lifecycleManager,
                    "name": testSolutionsEntry["com.microsoft.windows.magnifier"].name,
                    "settingsHandlers": [
                        {
                            "type": "gpii.windows.registrySettingsHandler.set",
                            "options": {
                                "dataTypes": {
                                    "FollowCaret": "REG_DWORD",
                                    "FollowFocus": "REG_DWORD",
                                    "FollowMouse": "REG_DWORD",
                                    "Invert": "REG_DWORD",
                                    "Magnification": "REG_DWORD",
                                    "MagnificationMode": "REG_DWORD",
                                    "ZoomIncrement": "REG_DWORD"
                                },
                                "hKey": "HKEY_CURRENT_USER",
                                "path": "Software\\Microsoft\\ScreenMagnifier"
                            },
                            "settings": {
                                "Invert": false
                            }
                        }
                    ]
                },
                "eu.singularlogic.pixelsense.sociable": {
                    "name": testSolutionsEntry["eu.singularlogic.pixelsense.sociable"].name,
                    "lifecycleManager": testSolutionsEntry["eu.singularlogic.pixelsense.sociable"].lifecycleManager,
                    "settingsHandlers": [
                        {
                            "type": "gpii.settingsHandlers.XMLHandler.set",
                            "options": {
                                "filename": "C:\\Sociable\\Configuration.xml",
                                "encoding": "utf-8",
                                "xml-tag": "<?xml version=\"1.0\"?>"
                            },
                            "settings": {
                                "fontSize": {
                                    "value": "normal"
                                },
                                "careCenter": {
                                    "$t": 1
                                },
                                "expert": {
                                    "$t": 1
                                },
                                "user": {
                                    "$t": 1
                                }
                            }
                        }
                    ]
                }
            }
        }, {
            name: "Application specific settings for non-existing solution",
            input: {
                "applications": {
                    "com.microsoft.windows.bogus-app": {
                        "active": true,
                        "settings": {
                            "http://registry.gpii.net/applications/com.microsoft.windows.bogus-app": {
                                "FollowFocus": 0,
                                "FollowCaret": 1,
                                "FollowMouse": 1,
                                "Invert": false
                            }
                        }
                    }
                }
            },
            expected: {}
        }
    ];

    jqUnit.module("Tester");
    jqUnit.test("Transformation tests", function () {
        fluid.each(testFixtures, function (test) {
            var result = gpii.transformer.configurationToSettings(test.input, testSolutionsEntry);
            jqUnit.assertDeepEq(test.name, test.expected, result);
        });
    });



    /* --------------- gpii.transformer.quantize tests -------------------- */
    var quantizeTests = [{
        name: "Basic quantize transformations",
        rules: {
            "foo": {
                "transform": {
                    "type": "gpii.transformer.quantize",
                    "inputPath": "someval",
                    "ranges": [
                        {
                            "upperBound": 380,
                            "output": 1
                        }, {
                            "upperBound": 450,
                            "output": 2
                        }, {
                            "upperBound": 600,
                            "output": {
                                "transform": {
                                    "type": "fluid.transforms.literalValue",
                                    "value": "DOGG",
                                    "outputPath": "bar"
                                }
                            }
                        }, {
                            "output": 3
                        }
                    ]
                }
            }
        },
        fixtures: {
            "low value check": {
                input: {
                    someval: 200
                },
                expected: {
                    foo: 1
                }
            },
            "on upper bound limit": {
                input: {
                    someval: 380
                },
                expected: {
                    foo: 1
                }
            },
            "interval check": {
                input: {
                    someval: 429
                },
                expected: {
                    foo: 2
                }
            },
            "upper default value": {
                input: {
                    someval: 1000
                },
                expected: {
                    foo: 3
                }
            },
            "expander in output": {
                input: {
                    someval: 500
                },
                expected: {
                    foo: {
                        bar: "DOGG"
                    }
                }
            }
        }
    }, {
        name: "Treatment of non-finite values",
        rules: {
            "transform": {
                "type": "gpii.transformer.quantize",
                "inputPath": "",
                "outputPath": "value",
                "ranges": [{
                    "output": 1
                }]
            }
        },
        fixtures: {
            "undefined check": {
            },
            "NaN check": {
                input: NaN // warning, this fixture not valid for JSON interchange
            },
            "single value check": {
                input: 6,
                expected: {
                    value: 1
                }
            }
        }
    }];

    jqUnit.test("Quantize tests", function () {
        fluid.each(quantizeTests, function (quantizeTest) {
            fluid.each(quantizeTest.fixtures, function (test, testname) {
                var transformed = fluid.model.transformWithRules(test.input, quantizeTest.rules);
                jqUnit.assertDeepEq(quantizeTest.name + " - " + testname, test.expected, transformed);
            });
        });
    });

     /* --------------- gpii.transformer.inRange tests -------------------- */
    var inRangeTests = {
        rules: {
            minOnly: {
                "foo": {
                    "transform": {
                        "type": "gpii.transformer.inRange",
                        "inputPath": "bar",
                        "min": 100
                    }
                }
            },
            maxOnly: {
                "foo": {
                    "transform": {
                        "type": "gpii.transformer.inRange",
                        "inputPath": "bar",
                        "max": 200
                    }
                }
            },
            minAndMax: {
                "foo": {
                    "transform": {
                        "type": "gpii.transformer.inRange",
                        "inputPath": "bar",
                        "min": 100,
                        "max": 200
                    }
                }
            }
        },
        expects: {
            "Min only - below threshold": {
                rule: "minOnly",
                input: {
                    bar: 23
                },
                expected: {
                    foo: false
                }
            },
            "Min only - on threshold": {
                rule: "minOnly",
                input: {
                    bar: 100
                },
                expected: {
                    foo: true
                }
            },
            "Min only - above threshold": {
                rule: "minOnly",
                input: {
                    bar: 100
                },
                expected: {
                    foo: true
                }
            },
            "Max only - below threshold": {
                rule: "maxOnly",
                input: {
                    bar: 23
                },
                expected: {
                    foo: true
                }
            },
            "Max only - on threshold": {
                rule: "maxOnly",
                input: {
                    bar: 200
                },
                expected: {
                    foo: true
                }
            },
            "Max only - above threshold": {
                rule: "maxOnly",
                input: {
                    bar: 2100
                },
                expected: {
                    foo: false
                }
            },
            "Min and Max - above threshold": {
                rule: "minAndMax",
                input: {
                    bar: 2100
                },
                expected: {
                    foo: false
                }
            },
            "Min and Max - within range": {
                rule: "minAndMax",
                input: {
                    bar: 160
                },
                expected: {
                    foo: true
                }
            },
            "Min and Max - below threshold": {
                rule: "minAndMax",
                input: {
                    bar: 21
                },
                expected: {
                    foo: false
                }
            }
        }
    };

    jqUnit.test("gpii.transformer.inRange tests", function () {
        fluid.each(inRangeTests.expects, function (test, tname) {
            var transformed = fluid.model.transformWithRules(test.input, inRangeTests.rules[test.rule]);
            jqUnit.assertDeepEq("inRange transformation tests - " + tname, test.expected, transformed);
        });
    });

    /* --------------- gpii.transformer.timeInRange tests -------------------- */
    gpii.transformer.inRange.timeInRangeTests = {
        rules: {
            normalOrder: {
                "foo": {
                    "transform": {
                        "type": "gpii.transformer.timeInRange",
                        "inputPath": "bar",
                        "from": "10:30",
                        "to": "19:45"
                    }
                }
            },
            normalOrderMinutes: {
                "foo": {
                    "transform": {
                        "type": "gpii.transformer.timeInRange",
                        "inputPath": "bar",
                        "from": "10:30",
                        "to": "10:59"
                    }
                }
            },
            wrappedOrder: {
                "foo": {
                    "transform": {
                        "type": "gpii.transformer.timeInRange",
                        "inputPath": "bar",
                        "from": "22:15",
                        "to": "00:18"
                    }
                }
            }
        },
        expects: {
            "Basic hours - matches": {
                rule: "normalOrder",
                input: {
                    bar: "11:00"
                },
                expected: {
                    foo: true
                }
            },
            "Basic hours - above threshold": {
                rule: "normalOrder",
                input: {
                    bar: "19:47"
                },
                expected: {
                    foo: false
                }
            },
            "Basic hours - below threshold": {
                rule: "normalOrder",
                input: {
                    bar: "10:28"
                },
                expected: {
                    foo: false
                }
            },
            "Minutes windows - matches": {
                rule: "normalOrderMinutes",
                input: {
                    bar: "10:37"
                },
                expected: {
                    foo: true
                }
            },
            "Wrapped order - matches morning": {
                rule: "wrappedOrder",
                input: {
                    bar: "00:12"
                },
                expected: {
                    foo: true
                }
            },
            "Wrapped order - matches evening": {
                rule: "wrappedOrder",
                input: {
                    bar: "23:00"
                },
                expected: {
                    foo: true
                }
            },
            "Wrapped hours - above threshold": {
                rule: "wrappedOrder",
                input: {
                    bar: "10:28"
                },
                expected: {
                    foo: false
                }
            }
        }
    };

    jqUnit.test("gpii.transformer.timeInRange tests", function () {
        fluid.each(gpii.transformer.inRange.timeInRangeTests.expects, function (test, tname) {
            var transformed = fluid.model.transformWithRules(test.input, gpii.transformer.inRange.timeInRangeTests.rules[test.rule]);
            jqUnit.assertDeepEq("timeInRange transformation tests - " + tname, test.expected, transformed);
        });
    });

}());
