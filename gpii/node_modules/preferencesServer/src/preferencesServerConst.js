/*!
Copyright 2017-2018 OCAD university

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/GPII/universal/blob/master/LICENSE.txt
*/
"use strict";

var fluid = fluid || require("infusion");

var gpii = fluid.registerNamespace("gpii");
fluid.registerNamespace("gpii.preferencesServer");

// The type of preferences safes
gpii.preferencesServer.prefsSafeType = fluid.freezeRecursive({
    user: "user",
    snapset: "snapset"
});

gpii.preferencesServer.defaultPrefsSetId = "gpii-default";

// Error messages
gpii.preferencesServer.errors = fluid.freezeRecursive({
    missingGpiiKey: {
        errorCode: "GPII_ERR_NO_GPIIKEY",
        message: "GPII key does not exist"
    },
    gpiiKeyExists: {
        errorCode: "GPII_ERR_GPIIKEY_EXISTS",
        message: "GPII key \"%gpiiKey\" already exists"
    },
    readOnly: {
        errorCode: "GPII_ERR_READONLY",
        message: "Can't update preferences for readOnly GPII key \"%gpiiKey\" (perhaps it is a snapset)"
    },
    missingPreferences: {
        errorCode: "GPII_ERR_NO_PREFS",
        message: "Missing preferences"
    },
    missingPrefsSafe: {
        errorCode: "GPII_ERR_NO_PREFSSAFE",
        message: "Missing prefsSafe"
    },
    // Catch all error for unaccepted errors
    errorAccessingPrefsSafe: {
        errorCode: "GPII_ERR_ACCESSING_PREFSSAFE",
        message: "Error accessing prefsSafe"
    },
    errorNotPrefsSafe: {
        errorCode: "GPII_ERR_NOT_PREFSSAFE",
        message: "Payload is not of type `prefsSafe`"
    },
    errorNotPrefsSafeMissingId: {
        errorCode: "GPII_ERR_NOT_PREFSSAFE_MISSING_ID",
        message: "Payload requires an `id` and type of `prefsSafe`."
    },
    errorUrlPayloadIdMismatch: {
        errorCode: "GPII_ERR_URL_PAYLOAD_ID_MISMATCH",
        message: "The ID parameter in the URL does not match the ID in the payload."
    },
    errorMissingPrefsSafeAndSetId: {
        errorCode: "GPII_ERR_MISSING_PREFSAFE_PREFSET_IDS",
        message: "Unable to process. `prefsSafeId` and `prefsSetId` are required fields."
    },
    errorCreateCredBadUsernamePassword: {
        errorCode: "GPII_ERR_CREATE_CRED_BAD_USERNAME_PASSWORD",
        message: "Unable to create credentials with this username and password combination"
    },
    errorUnlockingPrefsSafeCredentials: {
        errorCode: "GPII_ERR_UNLOCKING_PREFSSAFE_CREDENTIALS",
        message: "Unable to unlock Preferences Safe with the supplied credentials."
    },
    // Catch all error for unknown issues adding keys
    errorAddingGpiiKey: {
        errorCode: "GPII_ERR_ADDING_GPIIKEY",
        message: "Unable to add GPII Key to Preferences Safe."
    }
});
