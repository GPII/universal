/*!
GPII Infusion/Express Middleware

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        express = require("express"),
        gpii = fluid.registerNamespace("gpii");

    fluid.defaults("gpii.middleware", {
        gradeNames: ["fluid.eventedComponent", "autoInit"],
        components: {
            requests: "{requests}"
        },
        listeners: {
            onCreate: {
                listener: "{requests}.events.registerMiddleware.fire",
                args: "{that}"
            },
            onAttach: {
                listener: "{that}.useMiddleware"
            }
        },
        invokers: {
            resolveEventName: {
                funcName: "gpii.middleware.resolveEventName",
                args: "{that}.typeName"
            },
            useMiddleware: {
                funcName: "gpii.middleware.useMiddleware",
                args: ["{gpii.server}.server", "{that}.resolveEventName"]
            },
            handle: {
                funcName: "gpii.middleware.handle",
                args: "{arguments}.0"
            }
        }
    });

    gpii.middleware.useMiddleware = function (server, resolveEventName) {
        server.use(function (req, res, next) {
            var eventName = resolveEventName();
            req.fluidRequest.events[eventName].fire(req.fluidRequest);
        });
    };

    gpii.middleware.resolveEventName = function (typeName) {
        var eventName = fluid.computeNickName(typeName);
        return "on" + eventName.charAt(0).toUpperCase() + eventName.slice(1);
    };

    fluid.defaults("gpii.middleware.bodyParser", {
        gradeNames: ["gpii.middleware", "autoInit"],
        invokers: {
            handle: {
                funcName: "gpii.middleware.bodyParserHandle"
            }
        }
    });
    gpii.middleware.bodyParserHandle = function (request) {
        var parser = express.bodyParser();
        parser(request.req, request.res, request.next);
    };

    fluid.defaults("gpii.middleware.static", {
        gradeNames: ["gpii.middleware", "autoInit"],
        components: {
            urlExpander: {
                type: "gpii.urlExpander",
                options: {
                    vars: {
                        root: "{gpii.app}.options.root"
                    }
                }
            }
        },
        members: {
            path: {
                expander: {
                    func: "{that}.urlExpander.expand",
                    args: "{that}.options.path"
                }
            }
        },
        path: "{gpii.app}.options.static",
        invokers: {
            handle: {
                funcName: "gpii.middleware.staticHandle",
                args: ["{arguments}.0", "{that}.path"]
            }
        }
    });
    gpii.middleware.staticHandle = function (request, path) {
        var staticMiddleware = express["static"](path);
        staticMiddleware(request.req, request.res, request.next);
    };

})();