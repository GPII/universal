/*!
Rendering Tests

Copyright 2012 Raising the Floor - International

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

/*global require, __dirname*/

(function () {
    // This loads universal.
     var fluid = require("infusion"),
         gpii = fluid.registerNamespace("gpii"),
         jqUnit = fluid.require("jqUnit");

    fluid.require("testFramework", require);
    fluid.require("../renderer.js", require);

    var tester = gpii.tests.testEnvironment(),
        template = '<div class="container"><p class="my-paragraph"></p></div>',
        expectedTemplate = '<div class="container"><p class="my-paragraph">TEST</p></div>';

    tester.test("gpii.renderer.render", function () {
        var rendered = gpii.renderer.render(template, {
            tree: {
                children: [{
                    ID: "my-paragraph",
                    value: "TEST"
                }]
            },
            rendererOptions: {
                autoBind: false,
                cutpoints: [{
                    id: "my-paragraph",
                    selector: ".my-paragraph"
                }],
                fossils: {},
                document: {
                    getElementById: function () {}
                }
            }
        });
        jqUnit.assertEquals("Template is rendered correctly", expectedTemplate, rendered);
    });

    tester.test("Renderer grade", function () {
        var renderer = gpii.renderer({
            selectors: {
                "my-paragraph": ".my-paragraph"
            },
            protoTree: {
                "my-paragraph": "TEST"
            }
        });
        var rendered = renderer.refreshView(template);
        jqUnit.assertEquals("Template is rendered correctly", expectedTemplate, rendered);
    });

    tester.test("Renderer grade autobind", function () {
        var renderer = gpii.renderer({
            selectors: {
                "my-paragraph": ".my-paragraph"
            },
            model: {
                test: "TEST"
            },
            protoTree: {
                "my-paragraph": "${test}"
            },
            rendererOptions: {
                autoBind: true
            }
        });
        var rendered = renderer.refreshView(template);
        jqUnit.assertEquals("Template is rendered correctly",
            '<div class="container"><p class="my-paragraph" id="my-paragraph">TEST</p></div>',
            rendered);
        renderer.applier.requestChange("test", "NEW");
        rendered = renderer.refreshView(template);
        jqUnit.assertEquals("Template is rendered correctly",
            '<div class="container"><p class="my-paragraph" id="my-paragraph">NEW</p></div>',
            rendered);
    });

}());