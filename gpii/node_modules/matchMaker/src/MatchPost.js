/*!
GPII Match Maker POST Handler

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii");

    gpii.requests.request.handler.matchPostPreInit = function (that) {
        that.match = function (solutions, preferences) {
            var matchMaker = that.matchMaker,
                transform = matchMaker.transformer.transformSettings,
                strategy = fluid.getGlobalValue(matchMaker.options.strategy);

            that.when(matchMaker.match(preferences, solutions, strategy), function (matchedSolutions) {
                return transform({
                    solutions: matchedSolutions,
                    preferences: preferences
                });
            });
        };
        that.getSolutions = function (model) {
            var matchMaker = that.matchMaker,
                device = model.device,
                os = fluid.get(device, "OS.id"),
                version = fluid.get(device, "OS.version");
            matchMaker.solutionsReporter.get({
                os: os,
                version: version
            }, function (solutions) {
                matchMaker.prefilterSolutions(solutions, os, version);
                solutions = matchMaker.prefilterSolutions(solutions, device);
                that.events.onSolutionsReporter.fire(solutions);
            });
        };
        that.transformPreferences = function (model) {
            that.matchMaker.ontologyServer.set(null, {
                preferences: model.preferences
            }, function (preferences) {
                that.events.onOntologyServer.fire(preferences);
            });
        };
    };

    gpii.requests.request.handler.matchPost = function (that, model) {
        that.events.onMatchRequest.fire(model);
    };

})();