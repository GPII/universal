//This file is generated by the statistical analysis module. Manual changes are discarded
//2013-03-20-15-42
//ClusterCount: 1
//DataSets: 21
//COLLAPSEDCLUSTERS-DEBUG-FIRSTEVAL
//COLLAPSED-CN(1 1 0.9 0 0 0)
//COLLAPSED-KK(0.2 0.2 0.2)
var fluid = require("infusion");
var stat = fluid.registerNamespace("gpii.matchMaker.statistical");
stat.data = {
	"org.gnome.desktop.a11y.magnifier": [
		{
			"key": "preferences.display.screenEnhancement.tracking",
			"value": '"mouse"'
		},
		{
			"key": "preferences.display.screenEnhancement.invertImages",
			"value": false
		},
		{
			"key": "preferences.display.screenEnhancement.magnification",
			"value": 'parameters["mag-factor"] * 1.32'
		},
		{
			"key": "preferences.display.screenEnhancement.-provisional-showCrosshairs",
			"value": 'parameters["show-cross-hairs"]'
		},
		{
			"key": "preferences.display.screenEnhancement.magnifierPosition",
			"data": {
				"full-screen": "FullScreen",
				"left-half": "LeftHalf",
				"right-half": "RightHalf",
				"top-half": "TopHalf",
				"bottom-half": "BottomHalf"
				},
			"value": 'data[parameters["screen-position"]]'
		}
	],
	"com.microsoft.windows.magnifier": [
		{
			"key": "preferences.display.screenEnhancement.tracking",
			"value": 'if (parameters["FollowMouse"]["value"]) { "mouse" } else if (parameters["FollowCaret"]["value"]) { "caret" } else if (parameters["FollowFocus"]["value"]) { "focus" }'
		},
		{
			"key": "preferences.display.screenEnhancement.invertImages",
			"value": 'parameters["Invert"]["value"]'
		},
		{
			"key": "preferences.display.screenEnhancement.magnification",
			"value": 'parameters["Magnification"]["value"] / 100'
		},
		{
			"key": "preferences.display.screenEnhancement.magnifierPosition",
			"data": {
				1: "TopHalf",
				2: "FullScreen",
				3: "Lens"
				},
			"value": 'data[parameters["MagnificationMode"]["value"]]'
		}
	],
	"org.gnome.orca": [
		{
			"key": "display.screenReader.-provisional-speakTutorialMessages",
			"value": 'parameters["enableTutorialMessages"]'
		},
		{
			"key": "display.screenReader.-provisional-keyEcho",
			"value": 'parameters["enableEchoByCharacter"]'
		},
		{
			"key": "display.screenReader.-provisional-wordEcho",
			"value": 'parameters["enableEchoByWord"]'
		},
		{
			"key": "display.screenReader.-provisional-screenReaderBrailleOutput",
			"value": 'parameters["enableBraille"]'
		},
		{
			"key": "display.screenReader.-provisional-screenReaderTTSEnabled",
			"value": 'parameters["enableSpeech"]'
		},
		{
			"key": "display.textReadingHighlight.readingUnit",
			"data": {
				1: "line",
				2: "sentence"
				},
			"value": 'data[parameters["sayAllStyle"]]'
		},
		{
			"key": "display.screenReader.speechRate",
			"data": {
				true: 1.8,
				false: 4.4
				},
			"value": '((parameters["voices"]["default"]["rate"] - 50) * data[parameters["voices"]["default"]["rate"] < 170] + 170) * 0.77'
		},
		{
			"key": "display.screenReader.-provisional-punctuationVerbosity",
			"data": {
				0: "all",
				1: "most",
				2: "some",
				3: "none"
				},
			"value": 'data[parameters["verbalizePunctuationStyle"]]'
		}
	],
	"nvda.screenReader": [
		{
			"key": "display.screenReader.-provisional-speakTutorialMessages",
			"value": 'parameters["presentation"]["reportHelpBalloons"]'
		},
		{
			"key": "display.screenReader.-provisional-keyEcho",
			"value": 'parameters["keyboard"]["speakTypedCharacters"]'
		},
		{
			"key": "display.screenReader.-provisional-wordEcho",
			"value": 'parameters["keyboard"]["speakTypedWords"]'
		},
		{
			"key": "display.screenReader.-provisional-announceCapitals",
			"value": 'parameters["speech"]["espeak"]["sayCapForCapitals"]'
		},
		{
			"key": "display.textReadingHighlight.readingUnit",
			"data": {
				true: "all",
				false: "sentence"
				},
			"value": 'data[parameters["virtualBuffers"]["autoSayAllOnPageLoad"]]'
		},
		{
			"key": "display.screenReader.speechRate",
			"data": {
				true: 1,
				false: 3
				},
			"value": '(parameters["speech"]["espeak"]["rate"] * 3.1 + 80) * data[parameters["speech"]["espeak"]["rate"] <= 390]'
		},
		{
			"key": "display.screenReader.-provisional-punctuationVerbosity",
			"data": {
				0: "none",
				1: "some",
				2: "most",
				3: "all"
				},
			"value": 'data[round(parameters["speech"]["symbolLevel"] / 100)]'
		}
	]
}
